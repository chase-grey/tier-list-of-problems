[
    {
        "id": "951785",
        "title": "ST / Spell Checker / Add Spanish Lexicon",
        "details": {
            "problem": "As a Spanish translator, I type almost exclusively in Spanish. And Epic underlines every single word that I type as being misspelled. Thankfully, Epic finally supports choosing the spell check language per user (XDS 661862). But Epic doesn\u0027t provide a Spanish lexicon!",
            "ideaForSolution": "Please provide a Spanish lexicon.",
            "whyNow": "Supporting Spanish Spell Check (and other common secondary languages) is the logical next step after XDS 661862, which shipped with the August 2025 Release. It is now reasonable for users to expect that Epic supports spell check for at least the most common secondary languages. And Spanish is by far the most common secondary language in the US.",
            "smartToolsFit": "\"Create tools to improve efficiency of documentation\". With erroneous underlining of typed Spanish content, it hinders rather than helps users to write good content. Users may instead learn to ignore the underline or disable that feature.",
            "epicFit": "\"Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback.\" Notice that this QAN already has 7 SLGs attached.",
            "maintenance": "Unsure. On the initial release, we\u0027ll need to do some extensive testing to verify that the lexicon is decent. But after that, we\u0027ll be able to mostly leave it alone, making only small tweaks as customers report spurious or missing words.",
            "internCandidate": false
        }
    },
    {
        "id": "7462287",
        "title": "ST / Usage / Add SmartPhrase Usage Information to SmartPhrase Manager",
        "details": {
            "problem": "As a physician, I created many SmartPhrases over the years and often forgot about how I named those. I end up recreating a lot duplicates on the fly and now I have several similar SmartPhrases with different names. When I update my template, I updated one but end up not being the one I recently used. Users often ask how they can easily tell which SmartPhrase have been used and what they can delete since those are not used.",
            "ideaForSolution": "When users open SmartPhrase, it would be nice to see a column of how often a SmartPhrase is used so that they can clean up the SmartPhrases that are rarely used. As a physician builder, I\u0027d also like to see what are the SmartPhrases used most often by my colleagues when I shared those phrases with them so that I know which ones I should keep up to date.",
            "characteristics": "Intuitive to use but not overwhelming. Also possibly having personalization options so that the users can customize the view a bit.",
            "whyNow": "Top requested feature. Often brought up in customer feedback.",
            "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback",
            "success": "Feature tracking on usage and possibly the deletion on phrases with usage under certain threshold.",
            "maintenance": "Low",
            "internCandidate": true
        }
    },
    {
        "id": "7749945",
        "title": "ST / AI Text Assistant / Custom text actions are saved off as a string in EUR (continue)",
        "details": {
            "problem": "Currently, each custom text action is saved as free text in the EUR global for a clinician. This means there is not a unique ID or record per text action. This means developers here at Epic are unable to reference custom text actions by ID, preventing them from building enhancements like sharing records, customers creating their own custom text actions, or using custom text actions for AI SmartTexts or SmartPhrases (PRJ 321865).",
            "ideaForSolution": "Switch to using HH1 records (*Chase Grey 3/21/2025 10:49 AM updating based on Aiden\u0027s research) for each custom text action. This will allow developers at Epic to reference custom text actions by a unique ID, setting us up for success with future enhancements.",
            "characteristics": "Custom text actions are able to be referenced by a unique ID. A specific custom text action can be created so it is broadly available to clinicians across an organization. This infrastructure sets us up for potentially exporting custom text actions to Epic Earth, similar to SmartPhrases. Find a way (likely a conversion) to allow people to keep custom text actions they have already built.",
            "whyNow": "This was a corner we cut to release custom text actions faster. This seems like a good infrastructure level chance to do now before there are large number of custom text actions that need to be converted.",
            "success": "We will have succeeded if we can reference custom text actions by a unique ID and take on other enhancement projects next.",
            "maintenance": "We will likely need one time testing on a conversion and maybe performance testing on switching to EGX rather than EUR. I am not anticipating an ongoing maintenance or testing cost."
        }
    },
    {
        "id": "709400",
        "title": "ST / ALLOW MARKING USER SMARTPHRASES AS PERSONAL/SENSITIVE TO HIDE FROM OTHER EDITORS",
        "details": {
            "problem": "Users might create a SmartPhrase for a signature that doesn\u0027t make sense for other people to have access to or as a personal reference that isn\u0027t meant for others to use. If other people use their private SmartPhrases, this can make them feel like their privacy has been violated or annoyed that they can\u0027t control their personal smartphrases",
            "ideaForSolution": "Allow end users the choice to hide their SmartPhrases that aren\u0027t appropriate for others to use, preventing other users from searching or sharing SmartPhrases without the user\u0027s permission. This will make end users feel like they have control over their SmartPhrases",
            "characteristics": "Create a button in the user SmartPhrase editor that allows it to only be searchable or viewable by editors so SmartPhrases that aren\u0027t meant to be shared don\u0027t have to be. There could also be an HDF setting to allow organizations to turn this feature off if they don\u0027t think SmartPhrases should ever be private. Private SmartPhrases should able to be changed back to public SmartPhrases at any point and vice versa, and allow it to be shared limitedly if users are added as editors so it can be shared if the owner gives permission",
            "whyNow": "It was recently marked as a potential SPRE by a customer because they saw it as such a concern and it is regularly requested in ideas.epic.com",
            "smartToolsFit": "It will improve effectiveness because users already have the signature SmartPhrases but it will increase trust and feelings of security if they know that their personal information can\u0027t be taken by others",
            "epicFit": "This fits ST priorities because it would solve long standing existing pain points",
            "success": "SmartPhrases can be made private"
        }
    },
    {
        "id": "803923",
        "title": "ST / SMARTTEXTBOX / ADD HIGHLIGHT FUNCTIONALITY",
        "details": {
            "problem": "Users would copy text from an external document that has highlighting but wouldn\u0027t be able to remove the highlighting without a lot of effort. They also couldn\u0027t highlight text that they wanted to emphasize and bolding or changing word color just doesn\u0027t catch attention like highlights do",
            "ideaForSolution": "Users can use highlighting in the STB, similar to how they use text color",
            "characteristics": "There\u0027s already a design and DLG! It has a good outline, it just needs to be continued",
            "whyNow": "We have been getting this request regularly, including from 4 months ago. It\u0027s a paper cut that would be a big win for lots of people if we fixed it",
            "smartToolsFit": "It would improve efficiency with documentation by allowing users to remove highlighting they don\u0027t want without having to un-highlight in external programs or cut/paste as plain text but that would remove all other formatting too. If the highlighting is throughout a document, it\u0027s really inefficient to try to fix each individual line that has highlighting. It also would improve effectiveness of documentation because leaving in unnecessary highlighting might call attention to something while more important information for this context is skipped. It can also make the most important parts of a note or template really stand out, much more than bolding",
            "epicFit": "This fits ST priorities because it would solve long standing existing pain points",
            "success": "Can users highlight and remove highlighting within the STB",
            "maintenance": "Shouldn\u0027t have maintenance, might need regression testing checks when changes are made to STB accessibility or certain types of copy/pasting changes",
            "internCandidate": false
        }
    },
    {
        "id": "3401552",
        "title": "ST / SmartLists / Allow Unicode SmartList selections (limited RTF or Unicode plaintext)",
        "details": {
            "problem": "As a builder, creating SmartLists with Arabic, Chinese, or other languages that need Unicode support is time consuming to do because you need to create many extra SmartText records for that text. This also means that features like refreshable SmartLists and SDEs don\u0027t work or aren\u0027t reliable because picking an option with a nested SmartTool forces the SmartList to become non-reselectable.",
            "ideaForSolution": "If I was allowed to add Arabic, Chinese, etc directly in the SmartList then I could more quickly build out SmartLists that include these languages.",
            "characteristics": "Allow for Unicode text entry whether that is supporting RTF (in a fairly locked down sense -- tables likely shouldn\u0027t be an option, but text styling (color, bolding) have been requested in the past) or just Unicode plaintext. Stretch goal could be allowing for \"display text\" (QAN 4282536) to make picking options from the SmartList easier for people that aren\u0027t able to read the language.",
            "whyNow": "Frequently requested and our software has an increasing focus on supporting languages outside of the standard Latin characters you get with Windows-1252 encodings.",
            "smartToolsFit": "Make good SmartTools (tools) build intuitive. Tools we develop should be easy to build.â€‹",
            "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback",
            "maintenance": "Low once stable if we limit the things you can embed in a SmartList.",
            "internCandidate": false
        }
    },
    {
        "id": "3450155",
        "title": "AC / SMARTTOOLS / ADD A FANCY WAY TO APPLY A SELECTION TO ALL INSTANCES OF A SMARTLIST",
        "details": {
            "problem": "When completing notes/note templates, users often have to repeat document SmartList content, ie laterality for an ortho procedure. This is repetitive and preventable.",
            "ideaForSolution": "Allow selecting a SmartList to automatically populate linked SmartLists elsewhere in the note (simplist implementation), or update SmartList options) to reduce documentation in the note."
        }
    },
    {
        "id": "3752427",
        "title": "SMARTTOOLS / SPELL CHECK / EXCLUDE PATIENT FIRST AND LAST NAME IN SPELL CHECK",
        "details": {
            "problem": "As a physician, I get frustrated when my patient\u0027s name is flagged as misspelled by the spell checker. This adds extra clicks for me to ensure I\u0027m creating professional documentation.",
            "ideaForSolution": "Have the spell checker not flag the patient\u0027s name. Ideally also include other information like names of the patient\u0027s spouse, children, care team, etc.",
            "characteristics": "Minimally the patient\u0027s name is not marked as misspelled. Stretch goal could be having the patient name be able to be suggested by the spell checker for minor typos to the name.",
            "whyNow": "This may be worth prioritizing now that Ambient technology is becoming more commonplace. Before, when patient\u0027s names were largely pulled into notes with SmartLinks (which are exempt from spell checking) this wasn\u0027t as big of an issue. Text generated by Nuance, Abridge, etc. and eventually our own Ambient product will commonly include the patient\u0027s name and it seems we\u0027re not excluding ambient-generated content from spell check.",
            "smartToolsFit": "Create tools to improve efficiency of documentation.â€‹",
            "epicFit": "Innovate with system intelligence to reduce clinician burnout and improve user efficiency. Software must work, maintain high quality",
            "internCandidate": false
        }
    },
    {
        "id": "4320574",
        "title": "ST/HSWEB/RTL/TYPED MATCHING PARENTHESIS OR BRACES WITHOUT DIRECTIONAL TEXT DOESN\u0027T MATCH/ORIENT BRACES CORRECTLY",
        "details": {
            "problem": "As a builder, I struggle to recreate documents in Arabic within Epic. We get these from translation firms and I am not fluent in Arabic so making sure I am creating documents that make sense to our patients is a challenge when I can see punctuation moves around compared to what I see in the original document in Word.",
            "ideaForSolution": "Epic should be smarter about handling Arabic so punctuation (parenthesis, periods, dashes, etc) is handled consistently with Word.",
            "characteristics": "Ideally this would just work after copy/paste or inserting the document without extra steps to manually set text direction.",
            "whyNow": "This is a common pain point across customers. The workaround for this is to take a screenshot of the Arabic text, but this is not a good workaround because: Images can resize slightly to greatly degrade image/text quality. Images won\u0027t be accessible for patients that use screen readers. SmartTools won\u0027t work within images.",
            "smartToolsFit": "Ensure consistencies in the end-user experience, leading to efficient, effective, and happy users.â€‹ SmartTools (tools) we develop should be easy to build and expand on.â€‹",
            "epicFit": "Software must work, maintain high quality. Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback",
            "success": "Hard to do with this type of change but see if we see a decrease in complaints about this, or survey customers that have previously reported these issues after their build environments have upgraded.",
            "maintenance": "Overall a decrease if these documents just format correctly without tweaking, a lot of manual comparison, etc.",
            "internCandidate": false
        }
    },
    {
        "id": "5027515",
        "title": "ST/SMARTTEXT EDITOR/ADD ABILITY TO COMMENT IN SMARTTEXT WITHOUT APPEARING TO THE END USER",
        "details": {
            "problem": "We don\u0027t have tools for feedback when users are editing SmartText - this means that the workflow happens in Word, creating extra work, and need to reconcile versions/SmartLinks. There is also build that is not clear at a glance -- comments would allow folks to add info re: rule logic and embedded SmartTools at a glance.",
            "ideaForSolution": "Have comment functionality in the SmartText editor, so folks can have conversations about edits/add info about the build for reference."
        }
    },
    {
        "id": "5094667",
        "title": "ST / HSTTRANSLATE / HANDLE SMARTLINK PARAMETERS THAT UNDERGO TRANSLATION IN HIGHER VERSIONS BUT NOT IN LOWER VERSIONS",
        "details": {
            "problem": "As a customer builder, I am frustrated that SmartLink user parameters have issues when moved via Data Courier where the ID is converted to a CID, but fail to convert back. Further more, I am frustrated that copies of CERMSG (and other SmartLinks) don\u0027t automatically update the embedded record IDs, although that is a future problem to fix according to my Epic TS (QAN 4694963).",
            "ideaForSolution": "It would be nice if we had a way to just use the original values I configure in cases where the Epic system doesn\u0027t know how to process the SmartLink user parameters.",
            "characteristics": "Works automatically!",
            "whyNow": "Makes development and customer support easier since custom handling doesn\u0027t need to be made for each affected SmartLinks, updates for customer created copies of these SmartLinks, etc. This is a pre-req needed for addressing QAN 4694963 which would fully automate Data Courier / Turbocharger dependency calculation, EMFI/DC/TC ID translation, etc which is where the biggest benefit will be seen.",
            "smartToolsFit": "Tools we develop should be easy to build.",
            "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback. Other types of app team support",
            "maintenance": "Overall a decrease for maintenance.",
            "internCandidate": false
        }
    },
    {
        "id": "6246577",
        "title": "ST - SPELL CHECK - USE VOIKKO FOR FINNISH",
        "details": {
            "problem": "I am a doctor in Finland. Spell checking is something I expect all programs to have, but our Epic system doesn\u0027t have spell checking. So my notes and letters have silly misspellings, making me look unprofessional.",
            "ideaForSolution": "Other software that we use has decent Finnish spell checking, so clearly it\u0027s possible. Please give us this basic feature.",
            "characteristics": "Spell Check will work for Finnish. It will recognize the vast majority of words that our users use on a daily basis. And the suggestions it gives for misspellings will be reasonably good.",
            "whyNow": "We are currently in a legal gray area with Apotti. Our contract says that we need to provide Finnish Spell Check, which we technically do. However, our Finnish Spell Check functionality is bad enough that Apotti has taken every step possible to disable it across their entire organization. So effectively, they don\u0027t have Spell Check right now. Before they disabled it, users reported that the suggestions it gave for misspellings were \"useless and disturbing\" (see QAN 4957237).",
            "smartToolsFit": "Software must work (and users should agree that it does)",
            "epicFit": "Software must work",
            "success": "Apotti will re-enable Spell Check and keep it enabled",
            "internCandidate": false
        }
    },
    {
        "id": "7446923",
        "title": "SmartSection formatting lost on adding sections and cannot be restored",
        "details": {
            "problem": "When I use DAN in my note, the font from the SmartSection header is different from the rest of the note and it makes my note look unprofessional. My organization is pushing a new branding campaign and asking everyone to create standard and consistent template. If DAN use different font in part of it would make it hard to format the whole note. I cannot change the header font at all without asking the admin to do that. When I use DAN to pull A\u0026P note into a progress note. If A\u0026P note uses a different font, the SmartSection content won\u0027t match to the progress note font so my progress note looks unprofessional.",
            "ideaForSolution": "Make SmartSection work like any other SmartTools that can match the font of the template.",
            "characteristics": "No manual action needed from user.",
            "whyNow": "DAN and other SmartSection are adopted more and more so it is a very common request or soon will be.",
            "success": "This is filling the request from end user",
            "maintenance": "none",
            "internCandidate": false
        }
    },
    {
        "id": "7557419",
        "title": "ST / Generative AI / Text Actions / Check for logical contradictions",
        "details": {
            "problem": "From talking to various customers, there can be logical contradictions in what gets documented in the patient\u0027s chart. As one example, a user copies forward a note that says \"all lab results normal\" but then adds in documentation for a new abnormal lab result. These types of contradictions have also been observed in ambient generated notes coming from DAX.",
            "ideaForSolution": "We develop a new prompt that can take in text and return any logical contradictions that exist in that text. This can then be plugged into other AI workflows, such as native ambient. Native ambient devs have already expressed interest in building on this idea. We could also consider releasing this as a prompt in the text assistant. Users could then highlight a note, right click, run this prompt, and see any contradictions in it displayed at the bottom. We could look at integrating this type of contradiction check into the background, similar to ideas we\u0027re exploring for catching stigmatizing language in the background."
        }
    },
    {
        "id": "7691740",
        "title": "MM / UM / Use AI to evaluate reading level in letter review",
        "details": {
            "problem": "Many payers have recently made a commitment to provide simple explanations and easy-to-access assistance for any prior authorizations that were denied. Users that are attempting to write these explanations may struggle to know if what they are writing is simple and easy enough to understand for a patient. Users at Sutter were copying \u0026 pasting their letters into Word, using Word\u0027s Editor functionality to determine the text\u0027s reading level, then copying that info \u0026 pasting it into a note to document the reading level. This is a clunky copy/paste workflow that makes it clear Epic is missing functionality these clinicians need.",
            "ideaForSolution": "A simple wave 1: As users type into a textbox, they have an option to view stats on what the reading level is of what they are writing. A potential wave 2: If a user clicks on these stats, they could also click to have AI lower this reading level and rewrite the content. This sets us up well for other types of improvements to SmartTexts and SmartPhrases. Here are a few ideas: - Have an LLM review the SmartText or SmartPhrase for stigmatizing language and suggest alternatives - Have an LLM review for ambiguous language, such as abbreviations that could have different meanings in different contexts - In the future, plug into a potential SmartLink search agent to suggest SmartLinks that the template could benefit from - In the future, plug into the Epic wide translation workflow. This could let people send a SmartText off to be translated to another language, like Spanish. It would send an In Basket message to a translator with the original English content, an AI draft at a Spanish translation, and then once the translator has reviewed it, we could update SmartText build in the background.",
            "characteristics": "- Use AI to solve an upstream problem. By using AI here, end users don\u0027t need to use AI as frequently for improving reading level, removing ambiguous language, removing stigmatizing language, updating SmartLinks, or translation.",
            "whyNow": "Payers just announced this commitment last week (week of 6/23/2025). This is also important for improving a painful friction point in US healthcare.",
            "smartToolsFit": "Aligns with our values to make it easy for users to do the right thing.",
            "epicFit": "Aligns with efforts to improve system intelligence to improve efficiency and patient outcomes.",
            "internCandidate": false
        }
    },
    {
        "id": "7882764",
        "title": "ST / Pitch / Improve reporting and auditing on custom text actions",
        "details": {
            "problem": "Analysts and AI project managers will not have good insight into how custom text actions are being used once they go live. To get more details, they will have to reach out to TS to pull data from the global tracking all prompts that are written, then manually go through this data. This is tedious, slow, and will not scale well. Currently, organizations default to saving off each prompt that is sent for 30 days.",
            "characteristics": "Analysts and AI project managers can get details on who is using custom text actions, rates of accepted/adjusted/reverted, and where they are using them without reaching out to TS. Analysts and AI project managers can get details on how often safeguards are being hit by different users without reaching out to TS. Ideally, analysts and AI project managers can get details on how custom text actions are being used without reaching out to a TS. From talking to Brian Jacobson and Katie, a lawyer at Mercy, auditing this tool, including customers ability to save prompts longer than 30 days, is important. Potentially, orgs will want to save off the original text as well so if there is a litigation, they can go back and see how this tool changed the text in a note. (It is unclear to me now if this might be needed for defined text actions as well. The sense I get is people are far less worried about defined text actions. If this is an option for custom text actions though, it might be worth adding for defined text actions too).",
            "whyNow": "We are about to go on by default with custom prompts, meaning many more organizations will be looking for ways to understand how this tool is being used.",
            "smartToolsFit": "We want to make it easy for our users to do the right thing. Improving reporting and auditing of custom text actions makes it easier for our customers to roll out this powerful tool in a more ethical and safe way.",
            "epicFit": "This aligns with Epic\u0027s priorities to innovate with system intelligence to reduce clinician burnout and improve user efficiency. This aligns with SmartTools\u0027 team priorities to continue making progress on the AI Text Assistant"
        }
    },
    {
        "id": "7914897",
        "title": "ST / SmartTextBox / Support webp Image File Format",
        "details": {
            "problem": "Epic is the leading EHR company and identifies itself as an \"R\u0026D Shop\". So as a user, I expect Epic to be on the cutting edge of technology. Unfortunately, Epic does not yet support the webp file format, which is supported by 97% of browsers. The webp file format is supposedly superior to jpeg and png, which makes me think that I should prefer that format. However, if I try to insert or paste a webp image, Epic flat-out refuses it.",
            "ideaForSolution": "Let me use webp files. If you have to, convert them to something else behind the scenes.",
            "characteristics": "It should \"just work\"",
            "whyNow": "The webp file format has had wide support since 2018. And as of 2024, it is supported by 97% of all browsers in use. In particular, it is supported by all of the browsers that Epic targets. Furthermore, webp is becoming ubiquitous in web searches. And its prevalence is only likely to increase. This is a trend we should keep up with.",
            "smartToolsFit": "Software Must Work \u003e Address compatibility with 3rd party products",
            "epicFit": "Innovate and solve existing pain points",
            "success": "Pasting/inserting webp images will work",
            "maintenance": "Low",
            "internCandidate": false
        }
    },
    {
        "id": "7936231",
        "title": "ST / Feb \u002726 Pitch / Improve As-Needed SmartLink Search (Continued, May26)",
        "details": {
            "problem": "Users frequently have difficulty finding a SmartLink that pulls in the data that they need. This can be relatively simple data, a SmartLink that they know exists because it\u0027s in a template, or something that they aren\u0027t sure exists but need for the first time. On immersion, I\u0027ve been asked about a range of these, from ones that they probably should have learned during training (ME) to ones that are much more niche (ADMPROV, the pile of LABS SmartLinks, the various HISTORY SmartLinks). We have the Find SmartLinks report, but not many people know about it, and it\u0027s disruptive to people\u0027s workflows",
            "ideaForSolution": "Users are able to insert a new Epic-released SmartLink with one user-entered parameter, the query to find relevant SmartLinks. The system finds the relevant SmartLinks (I haven\u0027t given this too much thought, but I know Peter Wei Lin is working on something that could be useful to this), then returns some number of results based on confidence as a SmartList that will pull in the found SmartLinks. *Jonathan Ray 10/13/2025 10:53 AM Continued from Feb26 research: Some other approaches could also work, such as improving what SmartLinks are recommended based on usage data from similar users or print groups you frequently touch",
            "characteristics": "Users are able to reliably find relevant SmartLinks on the first try. Does not require leaving the note-writing workflow. Result is returned fast enough that it\u0027s not annoying to use",
            "whyNow": "This has been an issue for a long time, but AI classification makes the system intelligence required much more feasible than it would have been previously.",
            "smartToolsFit": "Make it easy for users to do the right thing by reducing the time and mental load to find and share SmartTools.",
            "epicFit": "Reduce clinicial burnout and improve user efficiency; solve existing pain points.",
            "success": "To be determined, will depend on our design",
            "maintenance": "Depending on our approach, will require at least some additional data logging to keep track of what a user has done. Some of this already exists, but may need to be expanded."
        }
    },
    {
        "id": "7963351",
        "title": "ST / EpicCommand Link / Provide A Better Way For User To Insert EpicCommand Link",
        "details": {
            "problem": "As a user of EpicCommand links, I want to enter parameters in a clear and structured way, so that I don\u0027t have to remember or worry about delimiters, formatting rules, or accidentally entering invalid values.",
            "ideaForSolution": "As a user creating an EpicCommand link, I can select a parameter type (e.g., patient ID, record ID, etc.) and enter its value in a dedicated field with built-in validation, so that I can easily construct links without worrying about delimiters, formatting rules, or invalid inputs.",
            "whyNow": "Saves build time for EpicCommand link. Work is being done in this area right now, but it is fairly bare bones without this proposed development. We are actively recommending organizations transition from EpicAct links to EpicCommand links. The smoother and more intuitive the EpicCommand link experience becomes, the easier it will be for organizations to adopt it and fully move away from EpicAct links. By improving usability and reducing errors now, we remove barriers to adoption and accelerate the retirement of outdated functionality.",
            "success": "Average users can build an EpicCommand link without any confusion.",
            "internCandidate": false
        }
    },
    {
        "id": "7974971",
        "title": "st / pitch / hsweb / smarttextbox - stylesheets",
        "details": {
            "problem": "Content referenced by users throughout the day are easier to interpret at scale when they are managed consistently. This is part of why we have set standards in our own internal usability guides. If our users want to maintain formatting consistency, they often need to take manual steps to ensure that one document\u0027s styling matches another, individually specifying each piece of formatting. We have the format painter tool to help with this concept, but that is limited to a single instance of an individual editor. There is not a current way to bring styling into line at scale (easily).",
            "ideaForSolution": "We should provide support for formatting stylesheets in SmartTextBox controls which are RichText-enabled. These will represent groupings of stylings which can easily be applied to a selected region with a single click (potentially). Similarly, we could apply table-level stylesheets to help users create better-looking table structures without excessive manual intervention. Ideally, we could also support (for those interested) customizable style definitions so that customers can lean into their own branding paradigms (different color schemes, fonts, etc.) to allow this to scale infinitely into the future.",
            "characteristics": "A good solution would likely \"feel\" similar to MS Word, which provides a good barometer for success.",
            "whyNow": "As we continue to roll out more AI features our customers will be much more likely to have large quantities of content inserted into their notes/documents where the formatting is not immediately defined by them. Therefore, they are more likely to want to reformat the content after the fact. Pre-defined stylesheets can help users to accomplish this task more quickly, and therefore makes it more likely for them to actually do it.",
            "smartToolsFit": "This fits our mission on several levels. First, it helps create a consistency between our editor and MS Word (as well as other similar tools). It will help improve efficiency by joining multiple tasks into a single action. By adding this functionality, we make it easier for users to build and expand on existing SmartTools, simplifying the steps involved and making it easier to do the \"right thing\". Lastly, this helps make users\u0027 SmartTools more of a joy to use because they can easily take bland content and make it more user-friendly.",
            "epicFit": "This aligns with Epic\u0027s priorities to innovate with system intelligence to reduce clinician burnout and improve user efficiency. This aligns with SmartTools\u0027 team priorities to solve existing pain points and improve AI-related workflows.",
            "success": "A good solution would likely \"feel\" similar to MS Word, which provides a good barometer for success.",
            "maintenance": "This will likely require a bit more testing overall. However, since this is mostly just grouping together existing pieces of functionality, it will likely not be more of a cost than it reaps in benefits.",
            "internCandidate": false
        }
    },
    {
        "id": "7983072",
        "title": "st / pitch / hsweb / smarttextbox - inline header/footer support",
        "details": {
            "problem": "Complex documents, such as letters, may desire to leverage header and/or footer segments to meet their needs. Sometimes this is due to external requirements (3rd party content, governmental forms, etc.) while other times it is just to make things look better for their users/patients. Managing these headers and footers is currently a bit cumbersome, as the SubSystem component did not provide a good mechanism for what was needed. Sometimes the header/footer content is specific to that unique template record while other times it may be shared across records. In either case, current templates support only the disjointed header/footer records. There is an existing effort to conditionally allow switching to only an \"embedded\" version of this implementation. Ideally we could always support both and leave the details to be dealt with behind the scenes.",
            "ideaForSolution": "We currently allow a form of inline header/footer editing when it comes to SmartLists which exist within them. However, that still only works if the header/footer is directly within the document and does not function for things like letter templates where the headers and footers are completely separate SmartText records. One potential solution would be to leverage this existing implementation and simply echo the content back to the underlying SmartText records which stores the \"body\" of the header/footer. Another option would be to leverage SmartSections, as that already has a concept for a single document which is maintained in multiple locations. In both situations, the goal would be to store header/footer information both discretely and as part of the whole, and allow the downstream mechanisms to dynamically respond to whatever the build might look like.",
            "characteristics": "A good solution would allow users to always view the most up-to-date rendering of the header/footer content while still allowing them to hot-swap with a different record and share that header/footer information across templates without duplicate records.",
            "whyNow": "The recent push to allow Tapestry to embed header/footer information within the templates themselves (PRJ 338470) illustrates that there is a need which we are not fully meeting. Part of the hesitation around implementing this outside of Tapestry is that downstream workflows may not be able to function without expecting the header/footer content to be defined externally. One goal here would be to overhaul the downstream consumers to stabilize this infrastructure.",
            "smartToolsFit": "This fits our mission on several levels. First, it helps create a consistency between our editor and MS Word (as well as other similar tools). It will help improve efficiency by allowing edits to happen directly within the SmartTextBox instead of requiring sending back and forth between the STB and a 3rd party application (for the embedded header/footer cases). By adding this functionality, we make it easier for users to build and expand on existing SmartTools, simplifying the steps involved and making it easier to do the \"right thing\". Lastly, this helps make users\u0027 SmartTools more of a joy to use because they can create more user-friendly, modern content.",
            "epicFit": "This aligns with Epic\u0027s priorities to innovate with system intelligence to reduce clinician burnout and improve user efficiency. This aligns with SmartTools\u0027 team priorities to solve existing pain points.",
            "success": "Success could be measured by ensuring that we can properly render header/footer content using both the historical implementation (separate ETX records) as well as the new implementation being worked up for Tapestry. If both can be managed simultaneously and rendered similarly even though they are represented differently under the hood, that would be a great success.",
            "maintenance": "In a way this would require additional maintenance/testing, since this will be additional logic, but ultimately it will be similar to what we would already have. We are simply going to make the content render similarly regardless of your decisions around storage/interoperability.",
            "internCandidate": false
        }
    },
    {
        "id": "7983256",
        "title": "st / pitch / hsweb / smarttextbox - RTL update and TS migration",
        "details": {
            "problem": "As a developer, I want the TextLine.js component of the SmartTextBox codebase to be converted from raw JavaScript to TypeScript, so that it aligns with the rest of the codebase. This will ensure type safety, improve code readability, and facilitate easier maintenance and implementation of RTL-related updates, ultimately enhancing the functionality and usability of the templates for end users.",
            "ideaForSolution": "As a developer, I want to convert the existing TextLine logic into one or more TypeScript files before implementing numerous functional changes, so that I can ensure type safety and avoid unnecessary complications that arise from the lack of type safety in other parts of the codebase.",
            "characteristics": "Having all of the RTL-related logic included in TypeScript instead of JavaScript should be sufficient to solve this completely.",
            "whyNow": "We are actively pursuing new RTL changes in the near future (touched on in QAN 7938948), and this type of restructuring is better to be done before any large functional changes. With new customers and new workflows looking to leverage RTL content as of late, now seems like an opportune moment for bringing this code in line with the rest of the code base.",
            "smartToolsFit": "It will help improve efficiency and code stability by providing more structure around one of our most-sensitive areas.",
            "epicFit": "This aligns with Epic\u0027s priorities to innovate with system intelligence to improve user/developer efficiency. This aligns with SmartTools\u0027 team priorities to help maintain our high quality product by enforcing type safety like we do elsewhere in our codebase.",
            "success": "Having all of the RTL-related logic included in TypeScript instead of JavaScript should be sufficient to solve this completely.",
            "maintenance": "Theoretically this should help with lowering long-term maintenance costs as we will get more for free with the TypeScript platform.",
            "internCandidate": false
        }
    },
    {
        "id": "7987855",
        "title": "ST / Project Pitch / Improve context menu usability",
        "details": {
            "problem": "As a physician, I am overwhelmed when I right click in SmartText Box to try do some copy and paste and got a long context menu that covers half of the editable areas. The menu options often not on the same spot as the context menu items keep changing when I right click on different spot in the note. I would like a streamlined context menu with only the most relevant options, so that I can quickly and easily find and use the features I need most often. A lot of the options I never really used.",
            "ideaForSolution": "As a physician, I would recommend implementing a system that intelligently tracks and analyzes user habits to optimize their experience. By monitoring usage patterns, the system can automatically tailor the available options to align with the individual\u0027s preferences and needs. This personalized approach not only enhances user satisfaction but also promotes more efficient and effective utilization of resources.",
            "characteristics": "Show less options but also reduce the need of digging into deeper menus to find the option",
            "whyNow": "Saving time, reduce cluster, meet the simplification goal",
            "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback",
            "success": "Measure by clicking and time the user goes to submenu.",
            "internCandidate": true
        }
    },
    {
        "id": "7987877",
        "title": "ST / Generative AI / Text Actions / Model seems unwilling to rewrite text to use the patient\u0027s name and pronouns",
        "details": {
            "problem": "Clinicians using ambient often get a response that does not use the patient\u0027s correct pronouns. Other times, clinicians writing text, such as in a note, use sterile language like \"Patient presents for multiple conditions. They are accompanied by their father\". Other times, a clinician uses pronouns and/or names for the patient, but may not be using the patient\u0027s preferred name or pronouns. All this means the patient is not being referred to in the way they want to be, which has an impact on trust, bias, and quality of health care received.",
            "ideaForSolution": "Make it so that whenever a user runs a text action over text, the model will automatically swap in the patient\u0027s preferred name and pronouns, making it easy for the clinician to do the right thing. With DLG 2153040, we now send the patient\u0027s preferred name and pronouns with all defined and custom text actions. We have a line in the prompt that reads as The patient\u0027s name is \u003cpreferred first name\u003e and the patient\u0027s pronouns are \u003csubject\u003e\u003cobject\u003e\u003cpossessive\u003e. This means the AI model will use the correct names and pronouns if generating from scratch or acting on text without names/pronouns. What we actually want though is for the AI model to be more assertive and always use the correct name and pronouns. If we add in an instruction like \"",
            "characteristics": "Correctly changes the patient\u0027s name and pronouns to their preferred name and pronouns. Doesn\u0027t change other person\u0027s name/pronoun if mentioned in the content. Meet other criteria we had for text action to ensure safety.",
            "whyNow": "A top request from Mayo is for a text action to update patient\u0027s pronouns. We could accomplish this in a more generic way than a dedicated text action though.",
            "epicFit": "Continue making progress on the AI Text Assistant as it\u0027s one of the starter kit AI features that is quickly being broadly adopted across the Epic community.",
            "success": "Direct feedback. Feature tracking metrics on accept rate and usage.",
            "maintenance": "Testing is likely pretty involved. Maintain can potentially be high if we are adding this extra piece to all prompt meaning we need to verify it for model upgrade/and other changes.",
            "internCandidate": false
        }
    },
    {
        "id": "8098258",
        "title": "ST / Pitch / SmartTool Background Color and Hyperspace Theme Limits",
        "details": {
            "problem": "As a Hyperspace user, I want the background color options for the SmartTextBox to be limited to only those that pair well with my chosen Hyperspace theme so that I can maintain a consistent, visually appealing, and accessible experience without accidentally selecting clashing or unreadable color combinations.",
            "ideaForSolution": "When a user changes their Hyperspace theme, the available SmartTextBox background colors automatically update to a curated set that is visually compatible. (Ex: You can’t use a light background color with the dark room theme) Color options consider readability (contrast between text and background) and alignment with the overall theme’s design palette. Users are prevented from selecting background colors that would cause poor readability or conflict with the theme. Documentation or a tooltip explains why some background colors may not be available for certain themes.",
            "characteristics": "Wave 0 (May26) Investigate (Pulsar Search) what Hyperspace theme and SmartTextBox background colors are paired together. Visualize the data (in a graph of some kind?) to help show what end users are doing today. Wave 1 (future version) Provide limits to what background color can be chosen for a particular theme. For example, if you are using the dark room theme you almost certainly don’t want to use a light background color in the SmartTextBox. You might however want to use a dark SmartTextBox background color when using one of the darker (ex: Deep Blue) themes though. Probably track the user’s background color with light /dark / high contrast (?) themes so switching themes keeps the SmartTextBox color preference. Maybe provide a way to easily toggle between light and dark backgrounds to allow a builder the ability to preview the SmartTool in a different background color.",
            "whyNow": "Color handling is challenging and a frequent source of issues, especially with copy/paste and color changing workflows. End users will rarely do this though.",
            "smartToolsFit": "Software Must Work",
            "epicFit": "Software must work, maintain high quality. Preventative quality improvements, such as automated testing and refactoring",
            "success": "Initial wave should be a smaller investigation project to see what color/theme combinations are used today.",
            "maintenance": "None",
            "internCandidate": false
        }
    },
    {
        "id": "8100957",
        "title": "ST \\ May \u002726 Pitch \\ Reduce Calls to Action Validation Agent for Previously-Validated Actions",
        "details": {
            "problem": "As an organization, I want Epic to optimize the tokens used in their AI tool sets. When users run the same custom prompt repeatedly, we don\u0027t think there is a reason to continually validate the action.",
            "ideaForSolution": "Now, the AI Text Assistant will only validate the prompt periodically.",
            "characteristics": "Any previously-defined text action should not call the action validation agent - we can save that information to the database and save the tokens.",
            "whyNow": "Give users the best experience with AI. AITA is one of the ST cornerstone AI features.",
            "smartToolsFit": "Reduce organizational cost.",
            "success": "Track token expenditure by organizations using custom text actions",
            "maintenance": "None",
            "internCandidate": false
        }
    },
    {
        "id": "8101556",
        "title": "ST / May \u002726 Pitch / Loosen the Safeguards on Custom Text Actions",
        "details": {
            "problem": "As a user, I want to take advantage of Epic\u0027s integration while writing my note. However, the AI Text Assistant will not answer any questions specifically about the patient. This is prohibitive to using the tool, so I just go to ChatGPT instead.",
            "ideaForSolution": "Now, I don\u0027t have to go to ChatGPT. Additionally, the medical guidance is tailored to the patient because the system has access to their full medical record.",
            "characteristics": "Remove the safeguards and surface relevant information in a way that is not medical advice.",
            "whyNow": "ChatGPT already answers questions that we refuse to answer under the current AI Text Assistant safeguards. Users will give up on the tool if we don\u0027t adapt to the current climate. Additionally, if we don\u0027t loosen these safeguards, there is no reason to forage for data.",
            "smartToolsFit": "Create tools to improve efficiency of documentation",
            "epicFit": "Continue making progress on the AI Text Assistant. Innovate with infrastructure for system intelligence",
            "success": "Continued use of the tool.",
            "maintenance": "Low/no.",
            "internCandidate": false
        }
    },
    {
        "id": "8101802",
        "title": "ST - SmartTextBox - Required SmartTools Indicator",
        "details": {
            "problem": "When I am filling out a large template, I cannot see at a glance whether I have completed all of the required fields in the template. Sometimes, I try to sign a note, thinking I\u0027ve finished filling it out, but then I get a popup saying that there are still SmartLists and wildcards to fill out. That popup tells me to \"press F2\", which may jump me to a non-required field. Furthermore, filling out a SmartList sometimes brings in a whole block of text with additional required fields, making it hard for me to track whether I\u0027ve filled everything out.",
            "ideaForSolution": "EntryFields have a handy stop sign that makes it obvious what I still have to fill out. Could the SmartTextBox show a similar indicator that doesn\u0027t require me to scroll the STB or hit F2 to see it?",
            "characteristics": "The user can easily see that there are required SmartTools in the STB without needing to scroll.",
            "whyNow": "The topic of a Required SmartTools Indicator was actually conceived in discussions about the Navigation Menu and Minimap development. I think the indicator could synergize with that functionality. We are also reimagining the STB toolbar for the Simplify project, and I expect that the solution for this QAN will involve the STB Toolbar.",
            "smartToolsFit": "\"Make it easy for users to do the right thing\". \"Create tools to improve efficiency of documentation\"",
            "epicFit": "\"Solving existing pain points\"",
            "maintenance": "Unsure",
            "internCandidate": false
        }
    },
    {
        "id": "8103394",
        "title": "ST / May \u002726 Pitch / Consolidate toolbar options for rich SmartTextBox",
        "details": {
            "problem": "When a new Epic user (or one who hasn\u0027t configured the STB toolbar) launches Notes in the sidebar, it will look something like this: Beyond including rarely used buttons like Next/Previous Field (as proven by feature tracking metrics), the Insert SmartText field takes up so much space that the toolbar is forced to wrap. Worse, in workflows that opt out of letting the toolbar wrap, the majority of these items fall into a More menu, including the ones users have shown to use most frequently (e.g. Refresh All SmartLinks). In the case of Handoff, they even resorted to offering a duplicate Refresh All SmartLinks button to account account for this. While the buttons can be removed via right-click, the user will discover that, unlike the main Hyperspace toolbar, they cannot drag the buttons to reorder them so options they use more frequently appear first. Moreover, the Insert SmartText field doesn\u0027t even offer the right-click option, requiring the user to launch the Modify Toolbar dialog from the Star menu or another button\u0027s right-click menu. At which point they\u0027ll discover just how many additional tools are at their disposal. Should the user prove inspired enough to add all available item to their toolbar, they\u0027ll be faced with this monstrosity: Compare this to the the floating formatting toolbar, which, beyond being organized more logically (and not consuming space on the view), consolidates the six indentation buttons into a single split button. Of course, that\u0027s assuming they discover this floating toolbar, as it\u0027s collapsed by default. The result? The user is forced to choose between a cluttered toolbar or only having quick access to a fraction of the SmartTextBox\u0027s features, while the rest are relegated to a cluttered submenu with next to no organization. It\u0027s enough to wish everything could be as simple as plain SmartTextBoxes, with their minimal buttons and the ability to easily pin the few you care about. And look at that. It would seem the Insert SmartText feature need not take up so much space after all.",
            "ideaForSolution": "The user should have more flexibility in configuring the SmartTextBox toolbar. Specifically: The ability to reorder buttons via drag/drop or the Modify Toolbar dialog. The ability to pin items from the Star menu to the toolbar without launching Modify dialog. Similar to the triple-dot menu in plain text SmartTextBoxes. The ability to group related button into a split button on the toolbar to conserve space while allowing quicker access to related features. Similar to the Indentation split button on the formatting toolbar. The ability to turn fields into buttons (e.g. Insert SmartText) to conserve space without losing access to the feature. Even better, we could leverage MFT data to assist or automate this configuration for the user, as originally detailed in QAN 7968293.",
            "characteristics": "Star menu should be better organized and it should be easier to find SmartTextBox features. It should be consistent with other toolbars and menus that leverage pins and drag/drop for personalization, minimizing the need to open the Modify Toolbar dialog. It should allow access to the most features with the least space. Ideally should be automated based on machine learning",
            "whyNow": "The SmartTextBox toolbar is only getting more complex as new features are added (Generative AI, Go to Section, etc.), forcing us to either bloat the toolbar further by default or bury new features where they\u0027re unlikely to be discovered or leveraged.",
            "smartToolsFit": "Makes it easier for customs to discover and leverage new features.",
            "epicFit": "Aligns with the Simplify initiative.",
            "success": "How many more tools are used. How many more users customize their toolbar. How much less often the Star menu needs to be opened, whether to access the Recent list or the All Other Tools submenu",
            "maintenance": "Their will be additional maintenance and testing required to account for there being more ways to configure the SmartTextBox toolbar.",
            "internCandidate": false
        }
    },
    {
        "id": "8103427",
        "title": "ST / May \u002726 Pitch / Allow for easier navigation within sectioned notes",
        "details": {
            "problem": "Users are commonly confronted with long notes, particularly as Ambient adoption increases. Important information is often scattered throughout the note, and they must resort to scrolling in search of it, since most is either pulled in via SmartLink or generated by AI. Whether they use the mouse wheel, drag the scrollbar thumb, or use the Page Up/Down keys, the resulting workflow is tedious and time-consuming. All the more given how easy it is to overshoot what they\u0027re looking for and having to backtrack. Or worse, if they need to jump back and forth to reconcile discrepancies located in different parts of the note, such as the HPI and A\u0026P. While some may resort to using Ctrl+F to search for section headers or other keywords in lieu of scrolling, doing so is less than optimal. That leaves the F2 and F8 shortcuts for jumping to the next unresolved SmartTool or SmartSection, but those work only situationally. F2 requires each pertinent section of the document to minimally have a wildcard, yet Ambient sections are unlikely to include those. Whereas F8 skips all non-SmartSection sections and requires knowledge of the unadvertised shortcut besides. The result? More time spent on documentation and review while patients are left waiting. And over time, just one more thing increasing the risk of burnout.",
            "ideaForSolution": "Imagine instead that users are greeted to the following sight upon opening their note. Instead of an uncooperative scroll thumb, the scrollbar presents easily identifiable tags for each of the sections they need to review. A single click on each is all it to takes to jump to them. No more foraging blindly. Better still, if they encounter a scenario where they need to reconcile different parts of the note, rather than jump back and forth, they can simply hover one of these scroll tags for a quick preview of the corresponding section\u0027s contents.",
            "characteristics": "Accurate determination of the sections in the document. Intuitive and unobtrusive. Keyboard accessible. Configurable if user prefers the normal scrollbar. Opt-in by workflow (since not all SmartTextBoxes don\u0027t use sectioned templates or involve much scrolling). Ideally available anywhere the note could be viewed, including both SmartTextBox and Report Viewer",
            "whyNow": "As Ambient workflows become more prevalent, so too will the need for users to be able to quickly find and review specific parts of their note. A challenge we\u0027ve previously tackled by focusing on reducing note length, which is less in our control in a world where a large portion of the note is AI-generated. Never mind government regulations and other factors than lead to note bloat, despite our best efforts to the contrary. More generally, we are seeing a trend of notes being used for review purposes, which further necessitates ease of navigation over blind foraging, particularly in notes you didn\u0027t write yourself.",
            "smartToolsFit": "Makes navigating within notes a joy instead of a pain.",
            "epicFit": "Reducing clicks is one of our top goals for UX design. And I would argue removing the need to blindly scroll with the mouse wheel or dragging the scrollbar thumb is worth a dozen clicks saved.",
            "success": "How much less users resort to scrolling with the mousewheel (or at all, if they can make do with preview bubbles). How often users interact with the minimap or navigation menu. How ofter users choose to pin the navigation menu to the toolbar. How rarely users choose to turn off the minimap",
            "maintenance": "The algorithm for detecting sections in the document will require a large swath of different templates to test against. We\u0027ll want a robust suite of unit tests to minimize the maintenance cost, particularly if and when the algorithm needs tweaking.",
            "internCandidate": false
        }
    },
    {
        "id": "8103446",
        "title": "ST / May \u002726 Pitch / Improve and consolidate User Settings views",
        "details": {
            "problem": "For users that want to customize their SmartTextBox experience, there are currently four different activities for them to choose from: SmartTool Accessibility Settings, Spell Check Settings, SmartTool Formatting Settings, Modify Toolbar. Of these, only Formatting Settings and SmartTool Accessibility Settings are available on the main SmartTools view in the User Settings workspace. And even then, both views are cut off, introducing multiple vertical scrollbars. Formatting Settings, in particular, has turned into a dumping ground, featuring settings like Autocomplete that aren\u0027t related to formatting. Meanwhile, Modify Toolbar is not discoverable through Search, requiring users to know they need to click the Star menu on a rich text box. Additionally, PRJ 343129 will soon be introducing a new set of Scrollbar Settings which are currently confined to a flyout menu instead of having a proper view.",
            "ideaForSolution": "Instead of users needing to hunt down the right view, they should be able to open up the SmartTools view on the User Settings workspace and have access to all of these settings. But rather than simply stacking these views one on top of another and having to scroll through them, the different categories of settings should be organized into a navigation tree, along with a search field to find the setting the user cares about. Similar to the User Security activity: The main Hyperspace search field then jump straight to the appropriate category within this view, rather than launching a standalone modal. Similar with Modify Toolbar and Formatting Settings in the SmartTextBox. We could also consider taking this a step further and reorganzing all the tabs on User Settings into a tree, with SmartTools being a top-level category. Spell check might then make more sense as a sibling category.",
            "characteristics": "All SmartTool settings should be discoverable and organized.",
            "whyNow": "The current array of SmartTool Settings views are only becoming more cumbersome and disorganized as new features are introduced. As indicated the 20+ related QANs I was able to find and link.",
            "smartToolsFit": "This will help with making the SmartTools infrastructure more scalable by making it far easier to introduce new settings without needing to muddy a view where it doesn\u0027t belong or create an entirely new view.",
            "epicFit": "This is a natural extension of the Simplify initiative.",
            "success": "How many more people choose to customize their SmartTextBox experience now that all the settings are together.",
            "maintenance": "This should actually reduce maintenance, as it will consolidate several views into one and make it easier to test.",
            "internCandidate": false
        }
    },
    {
        "id": "8103527",
        "title": "ST / May \u002726 Pitch / Support graph display mode for numeric tables",
        "details": {
            "problem": "A clinician is writing a progress note for a patient suffering from high cholesterol. They wish to include a trend graph in their note, but the only SmartLink they can find is .FLOW, which pulls the data in a tabular format. Unsatisfied, the user hops over to Flowsheets, generates a graph there, then copy pastes a screenshot of it into their note. Problem solved. At least, until the attending nurse discovers the flowsheet data has a typo.",
            "ideaForSolution": "When inserting the .FLOW SmartLink, the user is offered a parameter to switch the display mode from Table to Graph. The result is exactly what they wanted, and they decide to create a .XIMCHOLTREND SmartPhrase for next time that pulls the cholesterol trend graph in pre-configured. Now, when the nurse fixes that typo, the note need only be refreshed to update the graph.",
            "characteristics": "Â·         Available for the most commonly used numeric table SmartLinks. Offers the same flexibility in graphing style (trend, bar, etc.) as other places in Epic. Reversible such that graph can be easily turned back into table. Should work with hover bubble SmartLinks",
            "whyNow": "AI Insights features often leverage graphs for presenting such numerical data to users, and we run the risks of such graphs being copy pasted in a non-refreshable way if we don\u0027t offer an alternative.",
            "internCandidate": true
        }
    },
    {
        "id": "8103951",
        "title": "ST - Spell Check - Word Mining in Customer Systems",
        "details": {
            "problem": "As a clinician, I expect Epic, the leading EHR vendor, to know and recognize medical terms. However, Epic underlines words that I commonly use in my specialty as misspelled. I\u0027ve heard there\u0027s a way to make it stop doing this, but it should just work. In some cases, our Epic system has even suggested offensive words for misspellings (QANs 1079217, 1149262, 2810496).",
            "ideaForSolution": "Epic should be able to provide the best medical dictionary in the world. Show me that you understand healthcare and my specialty.",
            "characteristics": "Epic would have a lexicon for each locale that is made of all the words that our users actually use in their system â€“ ALL the medical words, NO offensive words, and NO archaic or \"Shakespearean\" words.",
            "whyNow": "The development for this is already ~85% done per an Epixperiment. The lack of medical terms in our lexicons has historically been a pain point for users. And it\u0027s not a good look for us that our EHR doesn\u0027t recognize medical terms that specialists view as common. There was also a case where the system made an offensive suggestion, and screenshots of it ended up on Twitter! Given the high visibility of this functionality, it\u0027s important that we get it right. Epic has the data and the know-how to provide the very best medical dictionary in the world. And we should do so. Furthermore, with the in-progress project of Spell Check in Standalone, we also now have a reason to trim down the number of files we use and their size. All of the files for a given lexicon need to be fetched to the client when initializing the Spell Checker. If there are too many files or they are too big, it hurts performance. However, most of the files we currently use are from a third party, and we can\u0027t decompile, combine, or modify them. We could, however, create our own from scratch. But first, we need the list of words.",
            "smartToolsFit": "Providing quality software",
            "epicFit": "Solve existing pain points",
            "success": "We will be able to build a data set including: All the words our users use as well as frequency counts. Spell Check interactions, such as a user accepting a suggestion for a given misspelling. With this data, we can finally build a complete, streamlined, medical dictionary. However, building the dictionary doesn\u0027t have to be a part of the development. Building the dictionary doesn\u0027t require programming; it can possibly be done by a TS or QM; and it should be done every few years.",
            "maintenance": "Once the infrastructure for building and fetching the words and usage counts exists, we can leave it alone to be reactivated as needed. Once we build the dictionary, we will need to make minor tweaks (which we already have to do) as users report errors.",
            "internCandidate": false
        }
    },
    {
        "id": "8105838",
        "title": "ST / Personalization Station, May26 Pitch / Improve system status and error reporting visibility",
        "details": {
            "problem": "As a provider moving my SmartPhrases with Personalization Station, I\u0027m confused when I\u0027m downloading because notifications don\u0027t appear when the actual SmartPhrases have been created. Additionally, I have run into an issue where my SmartPhrases didn\u0027t show up, but the support team was unable to determine the cause.",
            "whyNow": "We get at least a few questions per week about technical issues. Investigating what actually went wrong is currently difficult since our error logging is poor. Additionally, some of these issues aren\u0027t actually issues and are just caused by confusion due to imprecise pop up notifications.",
            "smartToolsFit": "Improves provider satisfaction by allowing us to support users better who are running into technical difficulties, maintain high quality throughput, and improve the usability of this feature.",
            "epicFit": "Software must work - ensures that we can more easily fix technical issues that arise and can respond to support requests faster, improving satisfaction",
            "success": "DeLorean time logging for myself, Derek Strehlow, Mitch Miller, Jason Mitchell, some TS, and some other Epic Earth support staff will likely decrease for support TLPs.",
            "maintenance": "Low maintenance cost, only concern may want to be cautious about how long we retain error logging data, may need some scheduled job to clean up the error data periodically.",
            "internCandidate": false
        }
    },
    {
        "id": "8105976",
        "title": "ST / May 26 Pitches / AI Text Assistant / Prompts will become harder to find in AITA menu once custom prompts and sharing are enabled",
        "details": {
            "problem": "As a clinician with particular text I want to generate, and looking for an AI prompt that fits my goal, I have access to many custom prompts - both ones that I\u0027ve created and ones that my colleagues have shared with me. However, I have to dig through a very long list of prompts in the AI Text Assistant to find one that might match, and even then, I\u0027m not sure if the prompt will fit my needs until I try it. This is not only time consuming, it is also frustrating enough that I will either just write my own prompt on the fly (inefficient and defeats the purpose of sharing functionality), stick to pre-defined prompts (don\u0027t get to leverage the benefits of custom prompts), or avoid using the Text Assistant altogether. Without redesigning the menu, that could result in a menu like one of these, where we either add more subcategories or funnel all prompts into the existing \"My Prompts\". Either one would lead to an extremely bloated and hard-to-sort through list: Related questions: Discoverability of shared prompts (both user and system). How do users know when they have new prompts available? How can users keep track of prompts they have/what they can be used for? (particularly if we don\u0027t have a manager)",
            "ideaForSolution": "More investigation is needed before coming to a solution, however some potential ideas are: Surface relevant prompt suggestions based on the text and surrounding workflow context. Maybe this even replaces the Recent prompts. Turn the AITA search into a semantic search, rather than exact word matching (similar to what Chart Search is doing with Cloud Search). Others?",
            "characteristics": "\"Just in time\" rather than \"just in case\" - it should be easy for me to find the prompt that fits my needs when I want it, rather than making me look through every possible option",
            "whyNow": "Once users can share prompts with each other, it\u0027s very likely that users will have access to many more prompts than they already have, and they might not be familiar with the ins and outs of each one. We don\u0027t want to introduce the potential for users\u0027 menus to get very bloated without a way for them to effectively navigate all the available options. (Similar to how users have to go to the SmartPhrase Manager today to find the SmartPhrase they want to use, because memorizing the mnemonics is impossible)",
            "internCandidate": false
        }
    },
    {
        "id": "8107064",
        "title": "ST / Pitch / Add touch support for autocomplete",
        "details": {
            "problem": "As a touch screen user, I currently don\u0027t get access to SmartTextBox autocomplete functionality, since it is disabled while in touch mode. This causes additional time/mental burden while typing content.",
            "ideaForSolution": "As a touch screen user, I should see clinically relevant autocomplete suggestions while I\u0027m typing, that I can easily and intuitively interact with using touch gestures."
        }
    },
    {
        "id": "8107734",
        "title": "ST / Gen AI / Text Actions / Dashboard component for Text Assistant Templates",
        "details": {
            "problem": "Text Assistant Templates (TATs) are an incredibly powerful way to embed AI into templates both at an organizational and a user level. However, as an administrator, I cannot easily differentiate the use of these from the usage of the rest of the AI Text Assistant.",
            "ideaForSolution": "As an administrator, when I look at the AITA dashboard, I should be able to do this differentiation and, at a glance, judge the effectiveness of my organizations use of it.",
            "characteristics": "Quantifiable. Builds on existing reporting infrastructure",
            "whyNow": "TATs are being released in Feb 26.",
            "smartToolsFit": "This will make our features more intuitive to maintain for organizations.",
            "epicFit": "It is a reporting tool for AI, an important priority for both SmartTools and Epic.",
            "success": "We will measure success by seeing more customers adopting the TAT feature.",
            "maintenance": "Minimal.",
            "internCandidate": false
        }
    },
    {
        "id": "8107786",
        "title": "ST / May \u002726 pitch / Text assistant dashboard doesn\u0027t display info from feedback",
        "details": {
            "problem": "Starting in Feb \u002726, users will be able to give feedback on responses from the text assistant through thumbs up/down buttons. A leader reviewing the text assistant dashboard will not see any info from this feedback, meaning they are missing out on potentially valuable insights into how the tool is being used.",
            "ideaForSolution": "Have a new metric users can see for overall % thumbs up and % thumbs down \u003c- might want to be careful here since there is a bias for people to not leave feedback unless it\u0027s negative. Have new metrics that show ratio of thumbs up/thumbs down per prompt. (If possible due to PHI concerns) find ways to allow people to drill down into free text feedback from the dashboard. (If possible due to PHI concerns) find ways to have an LLM categorize and distill free text feedback, helping to make this large amount of data digestible to a leader at an org who would otherwise be overwhelmed with al the data"
        }
    },
    {
        "id": "8107804",
        "title": "ST / May \u002726 pitch / Highlighting UX is challenging for the text assistant",
        "details": {
            "problem": "Users who have access to the AI Text Assistant but not custom prompts see a disabled bloom in the toolbar. This has led users to thinking the tool isn\u0027t set up properly for them or not know how to use it, including two internal clinicians here at Epic. Users who have access to the text assistant and custom prompts see the bloom icon in the toolbar and often start their interaction by clicking it. They then write their prompt and click enter, sometimes expecting it to act on the full document. We see this show up as prompts like \"change pronouns to she/her\" with no text highlighted. Users who are using a trackpad, have shaky hands, are using touch mode on a tablet, or for any other reason struggle with highlighting text accurately will struggle to use the tool. This can come across when users highlight most of a paragraph but don\u0027t successfully highlight the last word or last part of a word, leading to a poor result.",
            "ideaForSolution": "Have users go into a \"selection mode\". The bloom icon is always enabled in the toolbar, regardless of if users have custom prompts turned on or not. Users can click that bloom icon to start the interaction. Users click or write the prompt they want to execute. We go into a \"selection mode\". Here\u0027 some ideas on this: Here, we can change the users cursor to have a highlighting icon, similar to what we do for format painter. We can provide a quick button to select all text. For users with custom prompts, we can prove a quick button for \"no text needed\". If users click this, then when this custom prompt is used in the future, we skip the selection mode step. We could provide ways for people to easily select sections, such as letting them single click on a paragraph to highlight the whole paragraph. Or if users click a heading, it could auto select the entire section. This is especially helpful for touch mode, where accurately drag/dropping with a finger is challenging and slow. After users have highlighted text, then the prompt runs just like before. For users that prefer to highlight text first, the text assistant continues to behave just as before.",
            "characteristics": "From talking to some customers about this, here\u0027s what we learned about what a good solution would need. Note, the sample size here was small, ~5 clinician leads. Deterministic: users already have enough to think about when using an AI tool. Having the UI be predictable and deterministic helps them understand the tool. Discoverable: allow users to always see the bloom icon and start the interaction by clicking the bloom icon. This is a more natural entry point for many users than highlighting. Fast: these users pointed out that they\u0027d be ok with an extra click to make characteristics 1 and 2 happen. Even so, let\u0027s aim to make this workflow as few clicks as possible.",
            "whyNow": "From looking at data from Mercy, watching users and internal clinicians use the tool, and from chatting to AI leads in the community, highlighting as the first step is the largest barrier to good UX that the text assistant currently has."
        }
    },
    {
        "id": "8107845",
        "title": "ST / May \u002726 pitch / AI projects at Epic don\u0027t have a great method for determining language",
        "details": {
            "problem": "Currently, developers working on AI projects that have flexible inputs need to add safeguards for working only on appropriate languages, such as English to start. Each time they do this, each project needs to come up with a new way of creating this, often through an LLM prompt. This is inefficient, not all that accurate, and expensive to do.",
            "ideaForSolution": "A while ago, LJ created a local language detection model that works very well and is small! See design 684757. If devs on SmartTools finish this, then devs across the company can use this in their AI projects to accurately detect languages. Devs on SmartTools could also then plug this into the text assistant to improve the accuracy of our translation safeguards.",
            "whyNow": "The text assistant is now starting to be used for translation in Tapestry with design 724681. So far, we can\u0027t enable custom prompts for translation though because our language detection is not granular enough for us to allow some languages but not others. It only allows one language at at time. This is also an increasing pain point across the company and slowing us down.",
            "epicFit": "Generalize to benefit more, help more AI projects."
        }
    },
    {
        "id": "6191585",
        "title": "ST / SMARTTEXTBOX WEB / Support spell check in standalone",
        "details": {
            "problem": "As an end user, I like using the Epic system directly from a web browser because it is quicker to log in to and I don\u0027t need to keep the Hyperdrive app updated. I know I can\u0027t use Dragon and some other non-Epic apps like tap badgers for authentication, but I also can\u0027t use the spell checker which Epic provides. This means my notes have a lot of misspellings making me look unprofessional. I also can\u0027t use simple text expansions so when I type \"afib\" it gets expanded to \"Atrial fibrillation\" so the patients reading my notes in MyChart know what I\u0027m talking about.",
            "ideaForSolution": "Add the spell checker to work in a browser!",
            "characteristics": "Likely using Wintertree to keep things consistent.",
            "whyNow": "Standalone use will likely pick up whether that is directly in a browser on a Windows or Mac (instead of using the Hyperdrive app), Chromebooks, or other platforms. Training will start using Standalone very soon and Standalone could possibly help get users back on the system earlier after malware attacks where spell checking would be missing functionality.",
            "epicFit": "Solve pain points, software must work",
            "internCandidate": false
        }
    },
    {
        "id": "7882759",
        "title": "ST / Text Actions / Add in user to user sharing",
        "details": {
            "problem": "Currently, users who create custom text actions are unable to share them with others easily.",
            "ideaForSolution": "Add in a sharing card to the \"create text action\" popup:"
        }
    },
    {
        "id": "8053138",
        "title": "EMC2 / Design / Some standard keyboard shortcuts don\u0027t work on macOS",
        "details": {
            "problem": "As a user, I expect Epic to just work. And I expect my muscle memory for standard shortcuts on my device of choice to hold true in Epic. However, certain standard shortcuts on macOS currently don\u0027t work in the SmartTextBox.",
            "ideaForSolution": "The behavior of the SmartTextBox should match my expectations. Specifically, standard macOS shortcuts should work there. And the SmartTextBox should never force Windows-style shortcuts on me.",
            "characteristics": "Standard macOS shortcuts would work. And the standard document-editing shortcuts â€“ like Ctrl+C, Ctrl+V, and Ctrl+X in Windows â€“ would change based on the OS to match users\u0027 expectations. Any tooltips mentioning the key combinations would also change.",
            "whyNow": "It\u0027s a simple thing that can be glaringly obvious to certain users. We want to build trust with our users by matching their most basic expectations.",
            "smartToolsFit": "This aligns with our values: Make it easy for our users to do the right thing and our products a Joy to Use.",
            "epicFit": "I think this falls under \"Software must work; maintain high quality\"",
            "success": "The shortcuts will work.",
            "maintenance": "Minimal",
            "internCandidate": false
        }
    },
    {
        "id": "8109595",
        "title": "ST / Pitch / The text assistant cannot be used for translation by qualified users",
        "details": {
            "problem": "Users that are fluent in multiple languages cannot use the text assistant on these multiple languages. For example, a clinician who is bilingual in English and Spanish will be blocked from running any prompt on Spanish text and cannot use the tool to assist in translation between English and Spanish.",
            "whyNow": "Translation has been a highly requested feature and even demo\u0027d at XGM years ago when we were first prototyping the text assistant. We\u0027ve gotten many requests to allow this and instead have to have a conversation about why we safeguard against this use case, even for users who are qualified to do this type of translation work. Design 721091 outlines creating a new translation agent which is nearly complete. Now that are text assistant is being moved to Nebula and the agent infrastructure, we can build off of this. This takes care of the complexity for actually translating content well and means another team owns the prompt for how to do this translation. Design 727660 already handled the complexity for enhancing user security to add a new user language configuration field for what languages a user knows and if they are qualified to translate to these languages. Design 730122 already created a new tapestry specific submenu for translate that we could build off of. This means all the hard parts are already done! All that\u0027s left is plugging this in to the text assistant for clinical workflows and linking up to the new translation agent."
        }
    },
    {
        "id": "7989552",
        "title": "st / pitch / rtf/html - lightweight RTF component for views",
        "details": {
            "problem": "Developers do not have a complete set of options for easily displaying RTF-backed content in their views. The wiki calls out that the ReportViewer is an ideal container because of the extra functionality it provides. Without the ability to use one (which is sometimes the case), developers have to fall back to setting something like \"dangerouslySetInnerHTML\" on a component and dealing with the risks (and shortcomings) of native HTML rendering.",
            "ideaForSolution": "Ideally, we could provide a lightweight component which is somewhere between a full ReportViewer and a simple DOM element wrapped around a string. This would remove a large amount of duplicative/boilerplate code and make it simpler for new views to include RTF-backed content.",
            "characteristics": "Being able to simply render RTF as HTML by setting a string value on a component would be a huge win. If we could also pull in all/most of the extra bells and whistles we are able to support in ReportViewer workflows (attribution, low vision, etc.) that would be a complete package.",
            "whyNow": "Now that web transitions are done, people are looking for ways to do new things and have already started reaching out (Varghese Mathew would be interested in hearing about any updates here). Additionally, now that we are no longer bound by IE limitations, we could start looking on implementing PRJ 287784 to optimize/simplify the HTML we output. By adding an extra level of abstraction we can get around a lot of the struggles we have had fighting against CSPs.",
            "smartToolsFit": "This fits our mission on several levels. First, it helps create a consistency between different implementations of RTF viewing in Hyperspace by avoiding app-specific implementation discrepancies. It will help improve efficiency of others by avoiding duplicative/boilerplate code in all of the application codebases. By adding this functionality, we make it easier for developers to consume RTF-backed content and make it easier to do the \"right thing\". Lastly, this helps make out tools easier to access by other Epic developers.",
            "epicFit": "This aligns with Epic\u0027s priorities to innovate with system intelligence to reduce developer overhead and frustration. This aligns with SmartTools\u0027 team priorities to solve existing pain points.",
            "success": "Success will be measured by being able to remove all (or at least almost all) direct implementations of the RTF-to-HTML APIs and instead route them through components which we control (and can, therefore, standardize).",
            "maintenance": "This will definitely require more testing/maintenance, as it will essentially be a new \"product\" for developers. However, it will also help alleviate some of the app-specific issues we encounter and allow us an easy way to test \"realistic\" setups by avoiding one-off situations.",
            "internCandidate": true
        }
    },
    {
        "id": "7992270",
        "title": "ST / Pitch / Create custom autocomplete model for EMC2",
        "details": {
            "problem": "EMC2 users will soon see autocomplete predictions as they type in SmartTextBoxes throughout the software. However, the word completion piece of the current autocomplete model was built using data from Cosmos Notes, meaning that the predictions are often for medical terms that are less relevant in EMC2 workflows.",
            "ideaForSolution": "As an EMC2 user, it would be great to see autocomplete suggestions as I type that are relevant to the language and structure used by Epic while writing designs, QA notes, or QA instructions. To accomplish this, we could collect data from EMC2 sources such as DLGs, QANs, SLGs, XDSs, etc. to create a new word completion model specific to EMC2 workflows.",
            "characteristics": "EMC2 users get better autocomplete suggestions within SmartTextBoxes.",
            "whyNow": "We\u0027re planning to turn autocomplete on for all users in the November 25 version. If users find the suggestions unhelpful, they will likely turn off the functionality entirely, meaning they would miss out on any future improvements."
        }
    },
    {
        "id": "7992394",
        "title": "ST / Feb \u002726 Pitch / Agents don\u0027t have an easy way to write text to a textbox",
        "details": {
            "problem": "Developers who are creating agents here at Epic are missing a key tool for agents to use, the ability to write to a textbox. With AI SmartSections, we have great UI and infrastructure setup for handling unreviewed AI generated text being placed in a textbox. What\u0027s missing is exposing these APIs to agents to allow an agent to put this unreviewed AI generated text in a textbox.",
            "whyNow": "Based on this 6/24/25 GenAI strategy monthly, a key way that agents will interact with the rest of the Epic system is through tools, which are: An API to do one thing, Usually deterministic, Has a structured input \u0026 output contract, Is used by agents, often via function calling. Exposing an API to allow agents to use function calling to write text to a textbox seems like an obvious foundation agent that would be useful in many workflows across Epic. Most of the work here is already done with AI SmartSections, we just need to expose it to agents now.",
            "internCandidate": false
        }
    },
    {
        "id": "7993986",
        "title": "ST / Text Actions / Feb \u002726 pitch / Support embedded parameter entry",
        "details": {
            "problem": "Currently, there is no way for a user to specify inputs for templated text actions when they\u0027re inserted into a SmartTextBox. The SmartText/SmartPhrase passed to the text action needs to be configured up front, and the only dynamic data will be from SmartLinks. While other AI SmartLinks can expose user-entered parameters, those can only be controlled by the user if they\u0027re directly inserting the SmartLink. If it\u0027s pulled in as part of a SmartText/SmartPhrases, any user-entered parameters would need to be similarly defined up front and thus wouldn\u0027t be dynamic.",
            "ideaForSolution": "Allow users to resolve AI SmartLinks with user-entered parameters to a section with embedded form fields for specifying inputs and buttons to generate the text once inputs are filled out or forgo generating text in favor of manual entry. This could work whether the AI SmartLink is inserted directly or pulled in via SmartText/SmartPhrase template. It could also work for AI SmartLinks without user-entered parameters if builders want users to choose before running any prompt.",
            "characteristics": "Flexible, Easy to use, Easy to build",
            "whyNow": "Templated text actions and AI SmartLinks are just taking off, and this would greatly expand their potential."
        }
    },
    {
        "id": "8033379",
        "title": "ST/ SmartPhrase/ Show user tags in the smarttool butler",
        "details": {
            "problem": "A physician has built out a bunch of tags to organize her SmartPhrases in the Manager but can\u0027t find them to use in the note so she has to switch back to the SmartPhrase Manager to be able to benefit from her new organization system with tags",
            "ideaForSolution": "Users will be able to open the SmartTool butler and filter by tags or add tags to SmartPhrases and SmartLinks. This will make it easier for end users to use their tags in their workflow and add tags to SmartLinks, which are also often hard to find and organize",
            "characteristics": "Tags will be usable in an end users actual workflow, they\u0027re easy to see and add new ones, and makes it easier to find their SmartTools",
            "whyNow": "We released tags in Nov 25 so we should keep this project moving. The main feedback that we got from usability studies is that they wanted this available in the note so it\u0027s something that is already requested and will continue to be a pain point until we fix it",
            "smartToolsFit": "Smarttool build and access should reduce time and mental load for users to use the tools and UX should make SmartTools easy to find, share, and discover and this would help achieve that.",
            "epicFit": "This is an enhancement that would help users and could help reduce burnout by improving efficiency",
            "success": "Users can use their tags while they\u0027re writing their note without having to switch workspaces",
            "maintenance": "Low, this should just be another column in the butler after it has been released",
            "internCandidate": false
        }
    },
    {
        "id": "8051800",
        "title": "ST / Text Assistant / Let Users Supply Custom Context",
        "details": {
            "problem": "As a clinician, I want the ability to add my own context to the AI Text Assistant, such as replacing \"hello\" with \"aloha\", making it sound more like me by supplying a writing sample, or letting it reference 3rd party clinical documentation that I use for patient care. This will help reduce my cognitive burden and focus more on patient care.",
            "ideaForSolution": "Now, the AI Text Assistant has an even better understanding of my tone and makes the note sound more like me.",
            "characteristics": "Provide users (or organizations) a way to: Supply custom instructions to include as part of the prompt infrastructure, Reference 3rd party documentation, such as clinical references, to include in their notes, Create a flexible framework to expand on new use cases",
            "whyNow": "Give users the best experience with AI. AITA is one of the ST cornerstone AI features.",
            "smartToolsFit": "Create tools to improve efficiency of documentation. Reduce cognitive burden and duplicative documentation; make the text assistant feel more personal; make it more fun to use",
            "epicFit": "Continue making progress on the AI Text Assistant. Innovate with infrastructure for system intelligence. This is (possibly) the next step of forager.",
            "success": "Increased adoption and widespread use of the AI Text Assistant. Track the amount and types of custom context added by users. This can also help inform future out-of-the-box text actions.",
            "maintenance": "No/low. Users would store their own context and/or opt into the behavior.",
            "internCandidate": false
        }
    },
    {
        "id": "8062765",
        "title": "ST / SmartText Editor / Allow the plaintext SmartText Editor to accept Unicode in some cases",
        "details": {
            "problem": "As a builder of MyChart ticklers (and other patient facing content), I need to take Arabic text, encode it, and add that to the SmartText Editor when adding the HTML content to the SmartText. This adds extra work for maintaining these SmartTexts and makes it harder to make changes when corrections need to be made.",
            "ideaForSolution": "Ideally, Epic would allow me to enter Arabic text directly into the SmartText Editor when building these plaintext SmartTexts.",
            "characteristics": "Support Unicode plaintext directly in plaintext SmartTexts. Only enabled for specific workflows like MyChart Ticklers but not others like MR Orders. This would likely be done using a SmartTool Context setting (N-node for the category or SmartText Editor E2N now; setting within a Context record in the future).",
            "whyNow": "Makes analyst work maintaining the system easier.",
            "smartToolsFit": "SmartTools (tools) we develop should be easy to build and expand on.",
            "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback",
            "success": "Builder feedback",
            "maintenance": "Overall reduction for time it takes to build and maintain MyChart Ticklers.",
            "internCandidate": false
        }
    },
    {
        "id": "8066648",
        "title": "ST / May \u002726 Pitch / Reevaluate and Unify SmartSection UI Across Apps",
        "details": {
            "problem": "Users are starting to encounter more and more SmartSections in their workflows, and this trend will continue as we release more SmartSections. However, each of these SmartSections looks a little different, and sometimes they have to remember which SmartSections have which buttons/features where. This adds extra cognitive load.",
            "ideaForSolution": "All SmartSections should follow some sort of pattern for their general interactive structure",
            "characteristics": "Existing SmartSections should be updated to use the new patterns. Core SmartTools code should be updated so that it\u0027s easy to do the right thing",
            "whyNow": "We are releasing more SmartSections every version. The core work of implementing many SmartSections is already done. Because we have 4-5 big SmartSections now, we can see that there has been a lot of clashes in SmartSection layout and styling",
            "smartToolsFit": "SmartTools we develop should be easy to build and expand on. App teams should not have to rehash the same discussions on styling and positioning for every new SmartSection. Tools we develop should be a joy to use. Each SmartSection should not require a separate mental model for users",
            "internCandidate": false
        }
    },
    {
        "id": "8069508",
        "title": "st / rtf/html - field logic should be refactored into derived classes",
        "details": {
            "problem": "As a developer, the Field.cs codebase has become overly cumbersome to work with. When initially created, its purpose was to help translate simple RTF field markup (which was 90%+ hyperlinks) into HTML. Since then it has become overloaded with much more complex (Epic-specific) features such as citations and TextAction results. This creates a lot of extra clutter/overhead when attempting to make changes and can unnecessarily increase testing scope due to things such as shared methods.",
            "ideaForSolution": "As a developer, it would help if the infrastructure worked more like what we currently have employed for the CharacterGroup base class. We already have a similar mechanism employed on the SmartTextBox side of things, as we had a need for a larger variety of field types much earlier on in the lifecycle. We can leave truly shared/common functionality in the base class, but then allow for derived classes to handle more specialized tasks. This would help with code cleanliness, separation, and readability. Because this serves more of a \"black box\" purpose on the C# side of things, we will still need to allow for very generic options such that we can maintain field types we do not explicitly \"support\" in full, but this should still all fall within the base/derived class scenario.",
            "characteristics": "Having all of the Epic-specific fields (and maybe even some other non-generic ones) living in separate classes would show great progress in this area.",
            "whyNow": "We seem to be relying more on overloading fields as of late, so it would be best to do this before the task becomes too daunting.",
            "smartToolsFit": "It will help improve efficiency and code stability by providing more structure around one of our most-active areas.",
            "epicFit": "This aligns with Epic\u0027s priorities to innovate with system intelligence to improve user/developer efficiency. This aligns with SmartTools\u0027 team priorities to help maintain our high quality product by encapsulating unique code concepts like we do elsewhere in our codebase. This area of the code is currently critical to the usage of AI text results as well as citations, which are both relatively new ST features requiring high quality results.",
            "success": "Representing our known field types (which are relevant for the platform) in separate classes while still allowing for generic field processing (for RTF flattening purposes) will be the key ways in which we measure success.",
            "maintenance": "Theoretically, this should help improve maintenance and testing costs long-term, as it will allow for more-targeted scoping in future projects.",
            "internCandidate": true
        }
    },
    {
        "id": "8076785",
        "title": "DoCo/SmartTools/Create an inline mobile plain text STB control",
        "details": {
            "problem": "When I am using Hyperspace on mobile and fill documentation with SmartText Box, it would be nice to start typing into the STB as if it is a inline control instead of launching the STB in a separate view to edit.",
            "ideaForSolution": "Implement a inline control version of STB that can work in mobile",
            "characteristics": "Provide good user experience. Seemless as if typing in entry field. Reduce jumping to activity and clicks",
            "whyNow": "We have much more activities will be available to mobile.",
            "internCandidate": false
        }
    },
    {
        "id": "8078994",
        "title": "ST / Gen AI / Citation Excerpt Infrastructure",
        "details": {
            "problem": "As a physician, I started to use some new AI SmartLinks to help draft my note. It pulls in some citations along with the generated content. When hover over, I see the line of content it referenced but I am not sure which part it is specifically based off when the citation contains a block of note content. It is nice to have more source context but it slows me down sometime if I have to read through all content in hover bubble to verify it is referencing the correct information and generated the right interpretation.",
            "ideaForSolution": "It would be nice if it highlight the exact words and phrases referenced from the source in the hover bubble so that I can quickly review those instead of reading through everything in the hover bubble.",
            "characteristics": "Follow the UX guideline. Consistent cross system.",
            "whyNow": "We already have he excerpt highlighting feature implemented in some released AI Citation print group but not some recent AI SmartLink generated citations.",
            "epicFit": "Innovate with system intelligence to reduce clinician burnout and improve user efficiency. Innovate with infrastructure for system intelligence, such as building new agent components and UI for app teams to leverage. Innovate with system intelligence for new SmartTools AI features. Support app team on their AI feature",
            "success": "This will need to pair this with feature tracking on reading time on citation hover bubble which is current tracked in PRJ 345350. We will meet general UX expectation and industry expectation.",
            "maintenance": "Low",
            "internCandidate": false
        }
    },
    {
        "title": "Create an easier way to have \"vanishing tips\"",
        "details": {
            "whyNow": "Questions about this come up every couple weeks which means it happens more frequently and aren\u0027t getting reported to the development team.",
            "internCandidate": false,
            "maintenance": "Overall improvement.",
            "problem": "As a physician builder for my specialty, I want to provide hints, tips, or other types of information that show up in a note when it is being edited, but disappear when the note is signed to not clutter the note. I can use an optional SmartList, but there are a number of issues with this: The SmartLinks I want to pull in sometimes include colons in the text which prevents signing the note. My analysts tell me there are issues with my build when they try to move it to production using Data Courier when I use a colon in the text where Data Courier finds the wrong SmartList or doesn\u0027t update the optional SmartList\u0027s record ID correctly.",
            "ideaForSolution": "If Epic created a new way to adding disappearing help text to a note that would allow me, and the analysts that help me, be more efficient.",
            "characteristics": "SmartSection!"
        },
        "id": "6855847"
    },
    {
        "id": "8079609",
        "title": "ST / Generative AI / Text Actions / Text assistant is disabled on certain types of content",
        "details": {
            "problem": "When users use the text assistant, they sometimes see that the text assistant is disabled when they highlight certain types of content. This includes refreshable SmartLinks, SmartSections, sectioning SmartLinks, and SmartBlocks. This has been confusing and frustrating to end users. I\u0027ve heard that it feels like the tool is unreliable for them since they can\u0027t count on it always being available. There are also valid use cases, like acting on an entire note, that get blocked and it may not be intuitive why this is.",
            "ideaForSolution": "Users always have access to the text assistant and never see that it\u0027s disabled.",
            "characteristics": "The system has reasonable defaults on what to do in all situations. Users can easily undo to go back to the previous state if the system reacted in an undesired way. We avoid harmful unintended impacts, such as deleting refreshability unnecessarily or breaking links elsewhere in the chart (like with DAN)",
            "whyNow": "We\u0027re close to turning the text assistant on by default. What I\u0027ve been hearing is this is a barrier to adoption and unintuitive, since people are struggling to figure out when they can/cannot use the tool."
        }
    },
    {
        "id": "8082575",
        "title": "ST / Pitch - Alternate Font Support",
        "details": {
            "problem": "Some fonts are not available on all systems. This means that user A may create a document which looks great to them but looks significantly worse to user B who is running on a different platform.",
            "ideaForSolution": "As a user, I would want to receive a similar experience regardless of whether I am logged-in at work on the standard PCs or from home on my MacBook.",
            "characteristics": "Due to technical limitations, we may never get to 100% parity in terms of font support, but we should be able to get to a point where we can provide smart alternatives for the most common workflows. The \\falt keyword allows for a given font to specify a \"backup name\" if the original is not found on the system. The goal would be to be able to create a mapping table of (the most common) fonts which users use to similar fonts on other platforms, helping bridge the gap between mutually-exclusive data collections.",
            "whyNow": "With the recent push for Mac support and the upcoming support for Linux web servers, we are looking more and more at cross-platform compatibility.",
            "smartToolsFit": "This helps with our accessibility and compatibility concerns, providing a more-similar result regardless of what happens to be installed on the user\u0027s system(s) at the time.",
            "epicFit": "This would help with maintaining quality and avoiding pain points brought about by hardware differences.",
            "success": "We could gather frequently-used font data from customers to build a shortlist of fonts to accommodate and work on determining appropriate alternatives which would help create cross-platform parity.",
            "maintenance": "This would be a new concept to keep in mind for maintenance purposes. However, we won\u0027t be able to get to every font type out there (as there are millions of possibilities). Given that, we should be able to limit ourselves to just the heavy hitters, limiting the likelihood of future updates (since the same fonts will almost always continue to be at the top of the list).",
            "internCandidate": false
        }
    },
    {
        "id": "8085038",
        "title": "ST / May 26 Pitch / AI Text Assistant / AI Text Assistant sometimes creates inaccurate content",
        "details": {
            "problem": "When clinicians use the AI Text Assistant to summarize notes that contain content prone to misinterpretation--such as tables of pertinent negatives--the AI Text Assistant sometimes produces prose that contains inaccurate information. See care concern 8041004. This issue was fixed by changing the source content to be clearer, but there is likely other content out there that is similarly confusing to both humans and the model",
            "ideaForSolution": "When clinicians use the AI Text Assistant to summarize notes, it is able to parse the data better and give accurate outputs, or perhaps give a confidence indication if it thinks there may be error.",
            "characteristics": "An established plan of how to handle and priorize errors and further investigation in how to prevent errors broadly.",
            "whyNow": "Usage of the AITA will continue to expand, especially with tools like templated text actions",
            "smartToolsFit": "Software must work -- address existing issues in software",
            "epicFit": "Do no harm, continue making progress on the AI Text Assistant as it\u0027s one of the starter kit AI features that is quickly being broadly adopted across the Epic community",
            "internCandidate": false
        }
    },
    {
        "id": "8109058",
        "title": "ST / May '26 Pitch / Lift the cap on text action length",
        "details": {
            "problem": "Users at UMCG (and others, I assume) want to use TextActions on larger blocks of text\n \nIn UMCG's case, they have Ambient transcripts of around 12k words that they're running a TextAction on to create a letter.",
            "ideaForSolution": "Increase the limit to something that's much less likely to be hit",
            "whyNow": "As users get more comfortable with generative AI, they'll want to use it for more workflows.\nAlso, as some customers go to the Gen AI Suite program, they'll be less worried about token usage, and we should let them use as many tokens as they need for their workflows.\n \n*Chase Grey 10/17/2025 1:58 PM\nAdding on here from Peter P's investigation, getting away from using the SmartLink framework was the biggest hurdle and that seems to already be done. This means we could now increase from our current limit of 30k characters to something much larger, going up to something like 400k characters if we want to. Since we are no longer constrained by the SmartLink framework, now is a good time to get to feature parity with 3rd parties like ChatGPT who can take in much more text.",
            "smartToolsFit": "Generalize to benefit more - make SmartTools infrastructure scalable to future (and current) use cases",
            "epicFit": "Solving existing pain points\nInnovate to reduce clinicial burnout and improve user efficiency"
        }
    }
]