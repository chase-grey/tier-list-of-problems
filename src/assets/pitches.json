[
  {
    "id": "7983035",
    "title": "Display SmartLists with Few Options as Option List in SmartTextBox",
    "details": {
      "problem": "SmartList require users to click into the list, and then make a selection. It would be much more efficient if for short lists, particularly Yes/No, or similar, we had the options inline, similar to an option list.",
      "ideaForSolution": "Users will be able to see and pick SmartList options with a single click.",
      "characteristics": "Good UX.",
      "whyNow": "Simplifies the end user workflow for common workflows."
    }
  },
  {
    "id": "7975409",
    "title": "SmartTextBox - Improved Shape Support",
    "details": {
      "problem": "Shapes (notably positioned shapes) are sometimes a crucial piece of the puzzle for users to solve a problem at hand. Sometimes it is to meet governmental requirements while other times it is simply finding the best way to fit the necessary content into the limited space available to them. While we support displaying and maintaining some types of shapes which already exist, we have limited options available for actively creating them from scratch, or even simply moving them around within the document. This means that users need to copy and paste from external sources and hope that things copy over correctly, as they are largely unable to modify them after-the-fact.",
      "ideaForSolution": "A user may need to take a document from a third party (such as an insurance provider) and implement it as a SmartText record to be able to integrate it into other Epic workflows such as letters or other communication methods. Once it is inside of the SmartTextBox, we can allow the user to click-and-drag to move the shape around on-screen, support more advanced wrapping styles, provide mechanisms for editing inner-content, and introduce the ability to create new shapes from scratch.",
      "characteristics": "Ideally, we would be able to construct any document which a user can do in MS Word, to avoid the dependence on that 3rd party product. A more likely situation is that we would be able to properly handle any document which our users receive from their vendors, or at least be able to take it in and bend it to our will in terms of layout.",
      "whyNow": "With the migration of the SmartText editor to web, we are regularly running into situations where users attempt to perform workflows which were previously possible (albeit a bit buggy in some situations) with the SubSystems-backed control.",
      "smartToolsFit": "This fits our mission on several levels. First, it helps create a consistency between our editor and MS Word (as well as other similar tools). It will help improve efficiency by allowing edits to happen directly within the SmartTextBox instead of requiring sending back and forth between the STB and a 3rd party application. By adding this functionality, we make it easier for users to build and expand on existing SmartTools, simplifying the steps involved and making it easier to do the right thing. Lastly, this helps make users' SmartTools more of a joy to use because they can create more user-friendly, modern content.",
      "epicFit": "This aligns with Epic's priorities to innovate with system intelligence to reduce clinician burnout and improve user efficiency. This aligns with SmartTools' team priorities to solve existing pain points.",
      "success": "Success can be measured in levels; we may need to iterate on this across multiple versions to reach the ideal end result. Being able to support documents which customers are encountering will be a great start.",
      "maintenance": "This will likely require a lot of additional testing/maintenance, as the majority of the features needed here are net-new concepts for the SmartTextBox control - that is why they haven't been implemented yet.",
      "internCandidate": false
    }
  },
  {
    "id": "7974873",
    "title": "SmartTextBox - Manual Jagged Table Cell Creation",
    "details": {
      "characteristics": "We should be able to re-create any jagged table we find in our test documents from scratch within a web STB. If we can choose a random existing document and recreate it reliably (and without an unnecessary amount of effort compared to other editors), we will be in a good spot.",
      "whyNow": "We have received many concerns over users struggling to recreate 3rd party documents for things such as insurance or governmental forms, where matching styling is very important. Similarly, label-based workflows have encountered struggles when attempting to best-utilize the limited space available on their size of labels.",
      "smartToolsFit": "This fits our mission on several levels. First, it helps create a consistency between our editor and MS Word (as well as other similar tools). It will help improve efficiency by avoiding the need for users to migrate their content between Epic and a 3rd party application to make (seemingly) minor edits. By improving this functionality, we make it easy for users to expand on existing SmartTools, as many templates (ETX, HH1) involve tables and many of those tables are jagged in some way. Lastly, this helps make users' SmartTools easier to build and hopefully more of a joy to use because of that.",
      "epicFit": "This aligns with Epic's priorities to innovate with system intelligence to reduce clinician burnout and improve user efficiency. This aligns with SmartTools' team priorities to solve existing pain points.",
      "success": "We should be able to re-create any jagged table we find in our test documents from scratch within a web STB. If we can choose a random existing document and recreate it reliably (and without an unnecessary amount of effort compared to other editors), we will be in a good spot.",
      "maintenance": "This will add some new options for testing moving forward. Realistically, these types of workflows should probably be tested now - we will just be changing the expected behaviors to be more helpful ones.",
      "internCandidate": false
    }
  },
  {
    "id": "7968764",
    "title": "Make the Text Assistant Context Aware",
    "details": {
      "problem": "When a clinician uses the AI text assistant, it will give responses that clearly do not pay attention to the surrounding context. This means responses are less useful than they could be and it makes the tool less useful and usable. An example is in In Basket, where the model doesn't understand most information about the patient or what the last patient message was, making it difficult for it to suggest useful responses to the patient.",
      "ideaForSolution": "Build a generic infrastructure that allows app team devs to pass relevant context for their workflows to the AI Text Assistant. For IB, this could look like devs passing IB Insights and the last patient message. For OP Notes, this could look like passing the patient chart summary. For IP and ED notes, this could look like passing IP and ED insights. Clinicians using the text assistant would then likely get far better and more tailored responses.",
      "whyNow": "This gives us a chance to stand on our hill of having a deeply integrated system. No other AI editing tool can integrate with the rest of the patient's chart in the way we can. This is a clear differentiator and potentially makes using the text assistant consistently more useful than going to ChatGPT, not just more convenient and safer.",
      "epicFit": "System intelligence improvements.",
      "success": "Consider feature tracking logging once for each context aware text action that is available and another for each time it gets used. Consider logging / reporting for the individual text action for more granular data."
    }
  },
  {
    "id": "7968293",
    "title": "Use MFT Data to Autofit/Simplify Rich Text STB Toolbar",
    "details": {
      "problem": "Fred views Hyperspace as being complex and cluttered, since there are features onscreen that he doesn't need to use. One way to simplify the system for Fred would be to tuck away low-use actions. While Fred clicks some of the buttons in the rich text STB toolbar during his workday, he uses hotkeys for some others and does not regularly click them all. He sees the STB toolbar less frequently around Hyperspace now that they have been tucked away in plain text SmartTextBoxes, but buttons in the rich-text STB toolbar that he doesn't use still add clutter.",
      "ideaForSolution": "Now that we have feature tracking data of STB buttons (SmartTextbox - Power BI Report Server), we should consider adjusting the default rich-text STB toolbar for users we don't have usage data for, and to leverage the auto-fit dev to auto-fit the toolbar when we do have data available for a user. We have been able to collect usage data for Fred, which shows that there are four buttons he clicks regularly but that he clicks other buttons very infrequently. Depending on how we want to approach the design, we could consider removing all other buttons from his toolbars so that he only has those four buttons in them (while giving him the option to decline the autofit suggestion if he would prefer).",
      "characteristics": "Our current default options actually look quite good based on usage data. This makes sense if you assume most people don't customize their toolbar to add buttons to it that are tucked away. Some initial ideas: Create SmartPhrases is one that might not be used as frequently as the others, but it could be kept in the default toolbar because it doesn't have a hotkey. It doesn't seem necessary to add any well-used formatting options since we have the floating formatting toolbar. This would be a good opportunity to evaluate if we can get rid of Next/Last to push users to use other ways of moving between SmartLists.",
      "whyNow": "We're already planning to incorporate auto-fit into our plain text STB project by auto-pinning a users' most frequently used buttons. This would be a good opportunity to leverage the functionality further for the rich text STB.",
      "smartToolsFit": "It will be consistent with implementing auto-fit for the plain text STB and our mission to simplify SmartTextBoxes in general.",
      "success": "Reduced clutter scores in the report, feedback from users adopting autofit."
    }
  },
  {
    "id": "7967434",
    "title": "Show Where SmartTexts Are Configured Beyond SmartTool Records",
    "details": {
      "problem": "As an analyst, I find SmartText maintenance difficult because I have a hard time finding where a given SmartText is all used when looking outside of other SmartTool records.",
      "ideaForSolution": "A generic report that can show any place a SmartText is used (within certain limitations -- code/static INI, item must be networked to ETX, etc) will make my life easier because I can find places a SmartText is plugged in within needing to maintain a tracker spreadsheet.",
      "characteristics": "Automatically works for any new item that networks to ETX. Works with the INI/record ID pairs used for E3P values.",
      "whyNow": "Ease of maintenance is a focus area to allow analysts to do more.",
      "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback.",
      "success": "Probably direct feedback.",
      "maintenance": "None, but can make maintenance quicker and easier overall.",
      "internCandidate": false
    }
  },
  {
    "id": "7964399",
    "title": "Mac / Accessibility APIs Can't Detect Text in SmartTextBox",
    "details": {
      "problem": "As a user, I can't use Nabla or Abridge to dictate into SmartTextBoxes within Hyperspace for MacOS. This means Hyperspace for MacOS isn't as usable as Hyperdrive for Windows is because I, and my colleagues, greatly prefer to use speech to text over typing.",
      "ideaForSolution": "One relatively quick fix for this issue of \"opaqueness\" of the smart note editor would be to have the note editor surface a representation of its contents to the AX API, e.g. by setting the value of its aria-description attribute to a JSON serialization of its content and current selection.",
      "characteristics": "Ideally vendor agnostic.",
      "whyNow": "This is a key reason that physicians at Emory switched back to using Hyperdrive for Windows instead of Hyperspace for MacOS.",
      "success": "Physicians at Emory, Cedars, and others start using Hyperspace for MacOS instead of Hyperdrive for Windows.",
      "maintenance": "Low once developed.",
      "internCandidate": false
    }
  },
  {
    "id": "7963374",
    "title": "Support Render Rich Text Content in Plain Text STB",
    "details": {
      "problem": "Some teams would like to use AI SmartLink with AI citations but in plain text STB. We already support rendering AI SmartLink return as AI SmartSection in plain text STB. However, citation itself is a rich text concept in SmartText Box and based on RTF markup. Currently plain text STB won't really process raw RTF and render as rich text content. It is something needed to allow AI SmartLink with citation to use in plain text STB. It is a growing needs and start with Cupid PRJ PRJ 322135: CV / Cath / LLM / Citations Support for Narrative Generation.",
      "ideaForSolution": "Ideally, we would have a way to load, parse and render rich text content in plain text STB so that AI citation workflow won't really rely on rich text STB and application can use the general AI citation RTF API for their use cases.",
      "characteristics": "Flexible and safe. Don't open a loop hole of allow any random rich text to be inserted into plain text STB.",
      "whyNow": "A pre-requisite of app's AI project (PRJ CV / LLM / Citations Support for Narrative Generation [338354], relating to in flight PRJ CV / LLM / Consolidate Workflows for Draft Invasive Procedure Narrative LLM Feature + Framework Update [322135]).",
      "smartToolsFit": "Infrastructure -> Generalize to benefit more -> Scalability -> Make SmartTools infrastructure salable to future use cases.",
      "epicFit": "Support app team commitments, including pair programming, PQA, charters, QA passes, design review, or dev. Continue making progress on the AI Text Assistant as it's one of the starter kit AI features that is quickly being broadly adopted across the Epic community.",
      "success": "Success of App team's project.",
      "maintenance": "Full ST owned infrastructure.",
      "internCandidate": false
    }
  },
  {
    "id": "7963351",
    "title": "Enhance SmartLink User Parameter for Segmented Parameter Validation",
    "details": {
      "problem": "DLG 2049486 is proposing a new SmartLink to allow building EpicCommand link using SmartLink user entered parameter. Because of technical limitations of the SmartLink user parameter popup, user still need to manually build the delimited string for the EpicCommand link parameter.",
      "ideaForSolution": "On a high level, we would like to enhance the SmartLink that can build all types of EpicCommand link with good validation and simple UI so it's easier for average user to build a link without having to build out the delimited string manually. For the generic SmartLink we will have two parameters: EpicCommand type - custom search type parameter that returns the available EpicCommand(This is done in DLG 2049486), and Parameters - segmented parameter with two segments: parameterType and parameterValue with dynamic validation.",
      "whyNow": "Saves build time for EpicCommand link. Work is being done in this area right now, but it is fairly bare bones without this proposed development."
    }
  },
  {
    "id": "7945918",
    "title": "Improve Automated Testing for Model Responses for the Text Assistant",
    "details": {
      "problem": "Each time Microsoft upgrades their AI models or we want to switch to a new model, QMs and devs on Notes and SmartTools spend time manually reviewing and testing our prompts to see if they perform well or need any changes. This problem will only increase in magnitude as we aim to support all primary languages.",
      "ideaForSolution": "Build out the same type of testing for our two custom text action prompts. Expand the testing for defined text actions and this new testing for custom text actions to work for all other primary locales. Clearly document how to generate these outputs, so when devs are making prompt changes in the future, they can easily run this automated testing to see the impact of the changes they've made. Work with translators and other AI projects to build an example of how this can scale and work well across other AI features.",
      "characteristics": "Devs and QMs can easily test new prompts and spot issues with prompt changes. Devs and QMs have limited manual work to do for each quarterly upgrade. We build a good example for other AI projects to follow. We have good systems built out for testing internationalized prompts.",
      "whyNow": "SmartTools is taking over more prompt ownership, meaning it's important for us to support our QM with better automated testing.",
      "smartToolsFit": "Software must work - our prompts are designed to work as well as possible and we catch issues before they get to our customers. Generalize to benefit more - we can set precedent here for other teams across Epic to follow in building out good automated testing.",
      "epicFit": "First, do no harm - have better systems in place to catch glaring issues that may arrise. Innovate with system intelligence. Continue making progress on the text assistant."
    }
  },
  {
    "id": "7936231",
    "title": "Improve As-Needed SmartLink Search",
    "details": {
      "problem": "Users frequently have difficulty finding a SmartLink that pulls in the data that they need. This can be relatively simple data, a SmartLink that they know exists because it's in a template, or something that they aren't sure exists but need for the first time. On immersion, I've been asked about a range of these, from ones that they probably should have learned during training (ME) to ones that are much more niche (ADMPROV, the pile of LABS SmartLinks, the various HISTORY SmartLinks). We have the Find SmartLinks report, but not many people know about it, and it's disruptive to people's workflows.",
      "ideaForSolution": "Users are able to insert a new Epic-released SmartLink with one user-entered parameter, the query to find relevant SmartLinks. The system finds the relevant SmartLinks, then returns some number of results based on confidence as a SmartList that will pull in the found SmartLinks.",
      "characteristics": "Users are able to reliably find relevant SmartLinks on the first try. Does not require leaving the note-writing workflow. Result is returned fast enough that it's not annoying to use.",
      "whyNow": "This has been an issue for a long time, but AI classification makes the system intelligence required much more feasible than it would have been previously.",
      "smartToolsFit": "Make it easy for users to do the right thing by reducing the time and mental load to find and share SmartTools.",
      "epicFit": "Reduce clinicial burnout and improve user efficiency; solve existing pain points."
    }
  },
  {
    "id": "7882764",
    "title": "Improve Reporting and Auditing on Custom Text Actions",
    "details": {
      "problem": "Analysts and AI project managers will not have good insight into how custom text actions are being used once they go live. To get more details, they will have to reach out to TS to pull data from the global tracking all prompts that are written, then manually go through this data. This is tedious, slow, and will not scale well. Currently, organizations default to saving off each prompt that is sent for 30 days.",
      "ideaForSolution": "Provide better analytics and auditing tools for custom text actions to allow organizations to monitor usage, safeguard triggers, and maintain records for compliance.",
      "characteristics": "Analysts and AI project managers can get details on who is using custom text actions, rates of accepted/adjusted/reverted, and where they are using them without reaching out to TS. Analysts and AI project managers can get details on how often safeguards are being hit by different users without reaching out to TS. Ideally, analysts and AI project managers can get details on how custom text actions are being used without reaching out to a TS. From talking to Brian Jacobson and Katie, a lawyer at Mercy, auditing this tool, including customers ability to save prompts longer than 30 days, is important.",
      "whyNow": "Custom text actions are now live in prod at a few orgs. Not having good reporting and auditing could be a barrier to rolling this feature out more broadly. If there are litigations, organizations or clinicians may be in legal trouble if they are not able to show that they used this tool responsibly.",
      "smartToolsFit": "We want to make it easy for our users to do the right thing. Improving reporting and auditing of custom text actions makes it easier for our customers to roll out this powerful tool in a more ethical and safe way.",
      "epicFit": "This aligns with Epic's priorities to innovate with system intelligence to reduce clinician burnout and improve user efficiency. This aligns with SmartTools' team priorities to continue making progress on the AI Text Assistant."
    }
  },
  {
    "id": "7879768",
    "title": "Create Feedback Buttons in AI SmartSections",
    "details": {
      "problem": "Currently, users don't have a way to give feedback on AI generated text. This is inconsistent with other AI features and is a highly requested features from customers. This will improve transparency, safety, and monitoring of these AI tools. This would be useful for defined text actions, shared custom text actions, and app team created AI workflows that use AI SmartSections. For custom text actions, it would also be useful if users have a way of giving feedback when they hit our safeguards and think they should not have.",
      "ideaForSolution": "Indicate to folks that are monitoring these AI projects stats on thumbs up/thumbs down, such as in our text assistant dashboard. For shared custom text actions, surface stats on these to the user who wrote the prompt. This could then let them get a sense for how well their custom text action is performing and make adjustments if needed. For shared custom text actions, surface stats on these to the user who is being shared to. This could then let them get a sense for how well this custom text action performs and make a more informed decision on whether or not to use it.",
      "whyNow": "From talking to customers at AI office hours, this was their highest priority enhancement for us to work on next. Here's the enhancements we talked about in order: 1. Feedback buttons, 2. Drill down in the dashboard, 3. Better auditing and reporting for custom text actions, 4. Share custom text actions."
    }
  },
  {
    "id": "7774673",
    "title": "Text Actions / Support Summary Levels in the Dashboard",
    "details": {
      "problem": "Currently, analysts, CMIOs, and other leaders of AI projects at customer sites cannot drill down to see service areas, departments, or individual user stats with the text assistant. This is how other dashboards, like the IB Art dashboard, work and is now a base expectation from the reporting core group here at Epic.",
      "ideaForSolution": "Allow for drilling down in the text assistant dashboard.",
      "whyNow": "At office hours, this was the second highest request from customers for us to work on next. Here's the list of enhancements and order we discussed: 1. Feedback buttons, 2. Drill down in the dashboard, 3. Better auditing and reporting for custom text actions, 4. Share custom text actions."
    }
  },
  {
    "id": "7691740",
    "title": "Use AI to Evaluate Reading Level in Letter Review",
    "details": {
      "problem": "Many payers have recently made a commitment to provide simple explanations and easy-to-access assistance for any prior authorizations that were denied. Users that are attempting to write these explanations may struggle to know if what they are writing is simple and easy enough to understand for a patient. Users at Sutter were copying & pasting their letters into Word, using Word's Editor functionality to determine the text's reading level, then copying that info & pasting it into a note to document the reading level. This is a clunky copy/paste workflow that makes it clear Epic is missing functionality these clinicians need.",
      "ideaForSolution": "A simple wave 1: As users type into a textbox, they have an option to view stats on what the reading level is of what they are writing. A potential wave 2: If a user clicks on these stats, they could also click to have AI lower this reading level and rewrite the content.",
      "whyNow": "Payers just announced this commitment last week (week of 6/23/2025). This is also important for improving a painful friction point in US healthcare.",
      "smartToolsFit": "Aligns with our values to make it easy for users to do the right thing.",
      "epicFit": "Aligns with efforts to improve system intelligence to improve efficiency and patient outcomes."
    }
  },
  {
    "id": "7663584",
    "title": "Add Ability to Hide/Collapse/Reorder Columns in SmartPhrase Manager",
    "details": {
      "problem": "Clinicians are growing increasingly frustrated and burnt out by managing and maintaining their growing lists of SmartPhrases. Users have reported through immersions, user interviews, and ideas.epic.com that there is a lot of bloat in the SmartPhrase Manager. Proposed ideas like a last edited column or a last used column (among others) aim to help alleviate this problem by making maintenance easier, but adding additional columns further bloats the manager which makes the problem even worse.",
      "ideaForSolution": "Make it easier for clinicians to do the right thing by giving them the ability to reorganize, hide, or collapse their columns in the SmartPhrase Manager. This will simplify their screens and remove another source of burnout.",
      "characteristics": "Allows users to move their columns and hide the ones they don't need.",
      "whyNow": "We have requests to add more information to the SmartPhrase Manager, but have run out of space. Users cannot change the order/visibility of unused columns.",
      "epicFit": "5. Software must work, maintain high quality. 8. Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback.",
      "success": "Immersions, customer calls, and user surveys.",
      "maintenance": "Low",
      "internCandidate": false
    }
  },
  {
    "id": "7462287",
    "title": "Add SmartPhrase Usage Information to SmartPhrase Manager",
    "details": {
      "problem": "As a physician, I created many SmartPhrases over the years and often forgot about how I named those. I end up recreating a lot duplicates on the fly and now I have several similar SmartPhrases with different names. When I update my template, I updated one but end up not being the one I recently used. Users often ask how they can easily tell which SmartPhrase have been used and what they can delete since those are not used.",
      "ideaForSolution": "When users open SmartPhrase, it would be nice to see a column of how often a SmartPhrase is used so that they can clean up the SmartPhrases that are rarely used. As a physician builder, I'd also like to see what are the SmartPhrases used most often by my colleagues when I shared those phrases with them so that I know which ones I should keep up to date.",
      "characteristics": "Intuitive to use but not overwhelming. Also possibly having personalization options so that the users can customize the view a bit.",
      "whyNow": "Top requested feature. Often brought up in customer feedback.",
      "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback.",
      "success": "Feature tracking on usage and possibly the deletion on phrases with usage under certain threshold.",
      "maintenance": "Low",
      "internCandidate": true
    }
  },
  {
    "id": "349115",
    "title": "SmartList Wildcard Entry Box Not SmartTool Enabled When List Is Refreshable",
    "details": {
      "problem": "Users create and use many SmartPhrases and are often aware of some useful SmartLinks that help speed up their documentation. If a user is documenting with a template that has a refreshable SmartList that contains a wildcard, they can't use their useful SmartPhrases or SmartLinks on this wildcard. Instead, users have to manually type out their answer to fill out this wildcard, slowing them down.",
      "ideaForSolution": "Allow users to add SmartPhrases and SmartLinks in SmartList wildcards to speed up their documentation and allow them to take full advantage of the SmartPhrases they created.",
      "characteristics": "The SmartLinks/SmartPhrases would have to be converted into plain text and have line breaks removed from the text so that it can be used in the wildcard even if it isn't initially the right format but the SmartTools should be able to work together.",
      "smartToolsFit": "Wildcards would become more efficient in SmartLists, it would make simple smartphrases more usable, and would remove a frustration that end users encounter regularly.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points."
    }
  },
  {
    "id": "709400",
    "title": "Allow Marking User SmartPhrases as Personal/Sensitive to Hide from Other Editors",
    "details": {
      "problem": "Users might create a SmartPhrase for a signature that doesn't make sense for other people to have access to or as a personal reference that isn't meant for others to use. If other people use their private SmartPhrases, this can make them feel like their privacy has been violated or annoyed that they can't control their personal smartphrases.",
      "ideaForSolution": "Allow end users the choice to hide their SmartPhrases that aren't appropriate for others to use, preventing other users from searching or sharing SmartPhrases without the user's permission. This will make end users feel like they have control over their SmartPhrases.",
      "characteristics": "Create a button in the user SmartPhrase editor that allows it to only be searchable or viewable by editors so SmartPhrases that aren't meant to be shared don't have to be. There could also be an HDF setting to allow organizations to turn this feature off if they don't think SmartPhrases should ever be private. Private SmartPhrases should able to be changed back to public SmartPhrases at any point and vice versa, and allow it to be shared limitedly if users are added as editors so it can be shared if the owner gives permission.",
      "whyNow": "It was recently marked as a potential SPRE by a customer because they saw it as such a concern and it is regularly requested in ideas.epic.com.",
      "smartToolsFit": "It will improve effectiveness because users already have the signature SmartPhrases but it will increase trust and feelings of security if they know that their personal information can't be taken by others.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points.",
      "success": "SmartPhrases can be made private."
    }
  },
  {
    "id": "722043",
    "title": "Create Calendar SmartLink or SmartLink You Can Pick Dates From",
    "details": {
      "problem": "Users want to add dates to their notes but may not know the exact date. .reldate can pull in a date but only based on the current date so users have to look at another calendar if they want to find out what the date is 2 weeks from Friday. There are plenty of date fields with the calendar across hyperspace and other applications and it's functionality users want in their notes as well.",
      "ideaForSolution": "Users can use a calendar SmartLink that would popup an inline calendar for users to choose dates from.",
      "characteristics": "It's easy to use, doesn't require knowing about the t+1/w-2 shortcuts, and matches UI that is used across Hyperspace and other apps.",
      "whyNow": "Users have been requesting this for a long time, there are a bunch of linked SLGs and ideas.epic.com links and solving this now is better than putting it off for forever.",
      "smartToolsFit": "This improves efficiency because users don't have to open their phone or computer calendar to find the date they're looking for. The reldate parameter popup isn't particularly user friendly so picking a date from better UI would make this more of a joy to use.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points.",
      "success": "Having a SmartLink that shows a calendar to pick a date on.",
      "maintenance": "Shouldn't have much maintenance or testing costs once the SmartLink is made."
    }
  },
  {
    "id": "736777",
    "title": "Add Display Name Item for SmartText Record Lookup for Mixed Case Names in Hyperspace",
    "details": {
      "problem": "End users can have SmartTexts with the name showing where patients see the title of the SmartText, which is in all caps. There's no way to change this currently so the end user or patient will see the title of the SmartText and may feel like the name is yelling at them. This is off putting and isn't appropriate for patients to be seeing.",
      "ideaForSolution": "Allow analysts to add a display name to a SmartText so that anywhere the name of a SmartText is displayed, end users and patients can see a more readable title.",
      "characteristics": "Display name can be personalized to be end user or patient facing but should be required.",
      "smartToolsFit": "This would make the system look better and be more of a joy to use because the SmartText title wouldn't look like it was really important because it was in all caps without having an option to change it.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points."
    }
  },
  {
    "id": "803923",
    "title": "Add Highlight Functionality",
    "details": {
      "problem": "Users would copy text from an external document that has highlighting but wouldn't be able to remove the highlighting without a lot of effort. They also couldn't highlight text that they wanted to emphasize and bolding or changing word color just doesn't catch attention like highlights do.",
      "ideaForSolution": "Users can use highlighting in the STB, similar to how they use text color.",
      "characteristics": "There's already a design and DLG! It has a good outline, it just needs to be continued.",
      "whyNow": "We have been getting this request regularly, including from 4 months ago. It's a paper cut that would be a big win for lots of people if we fixed it.",
      "smartToolsFit": "It would improve efficiency with documentation by allowing users to remove highlighting they don't want without having to un-highlight in external programs or cut/paste as plain text but that would remove all other formatting too. If the highlighting is throughout a document, it's really inefficient to try to fix each individual line that has highlighting. It also would improve effectiveness of documentation because leaving in unnecessary highlighting might call attention to something while more important information for this context is skipped. It can also make the most important parts of a note or template really stand out, much more than bolding.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points.",
      "success": "Can users highlight and remove highlighting within the STB.",
      "maintenance": "Shouldn't have maintenance, might need regression testing checks when changes are made to STB accessibility or certain types of copy/pasting changes.",
      "internCandidate": false
    }
  },
  {
    "id": "1123619",
    "title": "SmartTool Admin: Add Ability to Map/Link a SmartPhrase to a SmartData Element",
    "details": {
      "problem": "Analysts add SDEs to SmartTexts and SmartLists so compliance officers can track all kinds of metrics and to pull in data for reporting. Since SmartPhrases can't have SDEs, analysts are having to build workarounds with SmartTexts in SmartLinks to allow for SDE use in SmartPhrases, requiring some analysts to spend extra time making those records. This can also prevent some analysts from adding SDEs if they don't know about this work around and compliance officers not getting all of the data they need for meaningful use analysis.",
      "ideaForSolution": "Allow analysts to add SDEs to system SmartPhrases in the SmartPhrase editor so SmartPhrases will add SDEs when end users add those SmartPhrases to their notes.",
      "characteristics": "SDEs are applied when the SmartPhrase is used, removed if the SmartPhrase text is removed, and can be used to track usage for reporting.",
      "whyNow": "It's still being requested regularly.",
      "smartToolsFit": "Make it easy to do the right thing.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points."
    }
  },
  {
    "id": "2005922",
    "title": "Prevent Parts of a Note Template from Being Deleted",
    "details": {
      "problem": "Organizational leads and compliance officers often have required SmartLists or documentation that they add for legal reasons. These sections must be filled out but end users can just delete it from any note and not have to do the documentation.",
      "ideaForSolution": "Add a SmartLink that could be used similarly to a sectioning SmartLink but nothing in that section can be deleted in the note. This allows it to be more flexible and only added to certain parts of a template. We could also make the section more like a warn on delete SmartLink so that if any part of it is about to get deleted, there is a warning saying something like 'this is required documentation, are you sure you want to delete this?' to allow more flexibility for end users. Or maybe have both options with different SmartLinks.",
      "characteristics": "Allow sections of a SmartText to be required in a note in a way that makes deleting it difficult.",
      "smartToolsFit": "This would be a part of making it easy for users to do the right thing so that required documentation is actually filled out.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points.",
      "success": "Parts of a template can be restricted from being deleted when added to a STB."
    }
  },
  {
    "id": "2058026",
    "title": "SmartTool Editors Should Have a Preview Option",
    "details": {
      "problem": "Currently, the SmartPhrase/Link Editors do not have preview options, so end users are unable to see how the SmartTools they are creating will look when actually inserted into a SmartTextBox. It would be awesome if we provided them with a way to preview how their SmartTools would look, similar to the Barcode preview. As a physician builder who consistently creating template to be shared, I would expect SmartPhrase to has same feature that SmartText had, preview is the big one. Also a lot of organization feels SmartPhrase actually provides more flexibility and easy to update template with urgent need so they lean toward using SmartPhrase more than SmartText.",
      "ideaForSolution": "Support similar preview we did in ETX editor.",
      "characteristics": "First fill the need and ensure consistent user experience on other similar feature they familiar with. Easy to use and flexible enough.",
      "whyNow": "A long standing pain point.",
      "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback.",
      "success": "User satisfaction based on directly feedback/immersion. We can have feature tracking on usage of the preview feature which can be done in both POC and PRD.",
      "maintenance": "low",
      "internCandidate": true
    }
  },
  {
    "id": "2430009",
    "title": "SmartLists to Use Capitalization for Sentence Case",
    "details": {
      "problem": "Multi-select SmartLists are common in STBs but they cause sentences to be gramatically incorrect because the selections may have the first letter capitalized of the word, which makes the sentence look wrong. If the end user is normally a big stickler about grammar, this would probably drive them nuts. If they want to change the letter to fit the sentence, they would have to have a non-refreshable SmartList or remove the reselectability, which makes the tool less efficient to use in the future.",
      "ideaForSolution": "If the SmartList is multiselect, only respect sentence case in the SmartList for the first selection but not the others. Optionally, add a button in the SmartList editor in case the capitalization should be respected so this option can be opted in or out. Ideally, the SmartList would also remove the capitalization of the first selection if it wasn't the beginning of a paragraph but that might not be feasible.",
      "characteristics": "Customizable, allows for proper grammar without the builder having to anticipate where or how the SmartList options will be used.",
      "smartToolsFit": "Makes SmartLists more of a joy to use because end users don't have grammatically incorrect sentences all over their notes with no way to correct it.",
      "epicFit": "This fits ST priorities because it would solve long standing existing pain points."
    }
  },
  {
    "id": "3892341",
    "title": "SmartPhrase Manager List - Add Column to Display the Last Contact Time",
    "details": {
      "problem": "As a physician, I want to have a \"last edited\" column for my SmartPhrases, so that I can easily track which phrases I am actively maintaining and identify those that haven't been updated in a long time, allowing me to efficiently manage and clean up my collection of SmartPhrases.",
      "ideaForSolution": "Users could open the SmartPhrase manager and see a column showing when each SmartPhrase was last edited. Users would then know which SmartPhrases they have been maintaining and which ones they haven't touched for a long time.",
      "characteristics": "Efficiently and clearly display the information they want.",
      "whyNow": "Top requested feature on idea.com and constantly mentioned from customer feedback.",
      "epicFit": "Well fit in almost all of our values.",
      "smartToolsFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback.",
      "success": "Customer happiness. We know for sure this would make them happy.",
      "maintenance": "Low",
      "internCandidate": true
    }
  },
  {
    "id": "5094667",
    "title": "Handle SmartLink Parameters that Undergo Translation in Higher Versions but Not in Lower Versions",
    "details": {
      "problem": "As a customer builder, I am frustrated that SmartLink user parameters have issues when moved via Data Courier where the ID is converted to a CID, but fails to convert back. Further more, I am frustrated that copies of CERMSG (and other SmartLinks) don't automatically update the embedded record IDs, although that is a future problem to fix according to my Epic TS (QAN 4694963).",
      "ideaForSolution": "It would be nice if we had a way to just use the original values I configure in cases where the Epic system doesn't know how to process the SmartLink user parameters.",
      "characteristics": "Works automatically!",
      "whyNow": "Makes development and customer support easier since custom handling doesn't need to be made for each affected SmartLinks, updates for customer created copies of these SmartLinks, etc. This is a pre-req needed for addressing QAN 4694963 which would fully automate Data Courier / Turbocharger dependency calculation, EMFI/DC/TC ID translation, etc which is where the biggest benefit will be seen.",
      "epicFit": "Solving existing pain points, such as ideas frequently reported during immersion, submitted through ideas.epic.com, or from other forms of feedback. Other types of app team support.",
      "smartToolsFit": "Tools we develop should be easy to build.",
      "maintenance": "Overall a decrease for maintenance.",
      "internCandidate": false
    }
  },
  {
    "id": "6360073",
    "title": "Allow User To Switch Spell Check Language Ad-Hoc",
    "details": {
      "problem": "As a physician who is fluent in multiple languages, I meet with patients that speak a variety of languages. When I type out patient instructions for my patients, many words are marked as misspelled because spell checking only works for the default language used for the Epic system.",
      "ideaForSolution": "If I could switch the language I use for spell checking on the fly I can entire the notes and letters I create include words that are spelled correctly.",
      "characteristics": "Allow user specific default used across all SmartTextBoxes. Allow user level overrides for a given SmartTextBox (on the fly). Allow app teams to specify the language (via locale ID) building off of the change made in DLG 2127300.",
      "whyNow": "We increasingly see more and more content being created across a variety of languages. Translation workflows are also becoming increasingly an area of focus for R&D.",
      "success": "Feature tracking around users changing these settings, especially for the on the fly case.",
      "maintenance": "Expected to be low since these would be user settings.",
      "internCandidate": false
    }
  }
]
